[{"name":"ADD","description":"domain.ast.BinaryExpression.BinaryOperator.ADD","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-a-d-d/index.html","searchKeys":["ADD","ADD","domain.ast.BinaryExpression.BinaryOperator.ADD"]},{"name":"AFTER","description":"domain.ast.Loop.Evaluation.AFTER","location":"-compiler-framework-v2/domain.ast/-loop/-evaluation/-a-f-t-e-r/index.html","searchKeys":["AFTER","AFTER","domain.ast.Loop.Evaluation.AFTER"]},{"name":"AND","description":"domain.ast.BinaryExpression.BinaryOperator.AND","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-a-n-d/index.html","searchKeys":["AND","AND","domain.ast.BinaryExpression.BinaryOperator.AND"]},{"name":"ARRAY_ALREADY_DEFINED","description":"domain.ast.errors.SemanticError.Type.ARRAY_ALREADY_DEFINED","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-a-r-r-a-y_-a-l-r-e-a-d-y_-d-e-f-i-n-e-d/index.html","searchKeys":["ARRAY_ALREADY_DEFINED","ARRAY_ALREADY_DEFINED","domain.ast.errors.SemanticError.Type.ARRAY_ALREADY_DEFINED"]},{"name":"ARRAY_INDEX_VALUE","description":"domain.ast.errors.SemanticError.Type.ARRAY_INDEX_VALUE","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-a-r-r-a-y_-i-n-d-e-x_-v-a-l-u-e/index.html","searchKeys":["ARRAY_INDEX_VALUE","ARRAY_INDEX_VALUE","domain.ast.errors.SemanticError.Type.ARRAY_INDEX_VALUE"]},{"name":"ATTRIBUTION","description":"domain.ast.BinaryExpression.BinaryOperator.ATTRIBUTION","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-a-t-t-r-i-b-u-t-i-o-n/index.html","searchKeys":["ATTRIBUTION","ATTRIBUTION","domain.ast.BinaryExpression.BinaryOperator.ATTRIBUTION"]},{"name":"BAD_RETURN_TYPE","description":"domain.ast.errors.SemanticError.Type.BAD_RETURN_TYPE","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-b-a-d_-r-e-t-u-r-n_-t-y-p-e/index.html","searchKeys":["BAD_RETURN_TYPE","BAD_RETURN_TYPE","domain.ast.errors.SemanticError.Type.BAD_RETURN_TYPE"]},{"name":"BEFORE","description":"domain.ast.Loop.Evaluation.BEFORE","location":"-compiler-framework-v2/domain.ast/-loop/-evaluation/-b-e-f-o-r-e/index.html","searchKeys":["BEFORE","BEFORE","domain.ast.Loop.Evaluation.BEFORE"]},{"name":"CUSTOM","description":"domain.ast.BinaryExpression.BinaryOperator.CUSTOM","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-c-u-s-t-o-m/index.html","searchKeys":["CUSTOM","CUSTOM","domain.ast.BinaryExpression.BinaryOperator.CUSTOM"]},{"name":"CUSTOM","description":"domain.ast.UnaryExpression.UnaryOperator.CUSTOM","location":"-compiler-framework-v2/domain.ast/-unary-expression/-unary-operator/-c-u-s-t-o-m/index.html","searchKeys":["CUSTOM","CUSTOM","domain.ast.UnaryExpression.UnaryOperator.CUSTOM"]},{"name":"DIV","description":"domain.ast.BinaryExpression.BinaryOperator.DIV","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-d-i-v/index.html","searchKeys":["DIV","DIV","domain.ast.BinaryExpression.BinaryOperator.DIV"]},{"name":"EQ","description":"domain.ast.BinaryExpression.BinaryOperator.EQ","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-e-q/index.html","searchKeys":["EQ","EQ","domain.ast.BinaryExpression.BinaryOperator.EQ"]},{"name":"EXPRESSION_TYPE_MISMATCH","description":"domain.ast.errors.SemanticError.Type.EXPRESSION_TYPE_MISMATCH","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-e-x-p-r-e-s-s-i-o-n_-t-y-p-e_-m-i-s-m-a-t-c-h/index.html","searchKeys":["EXPRESSION_TYPE_MISMATCH","EXPRESSION_TYPE_MISMATCH","domain.ast.errors.SemanticError.Type.EXPRESSION_TYPE_MISMATCH"]},{"name":"F32","description":"domain.types.Float.FType.F32","location":"-compiler-framework-v2/domain.types/-float/-f-type/-f32/index.html","searchKeys":["F32","F32","domain.types.Float.FType.F32"]},{"name":"F64","description":"domain.types.Float.FType.F64","location":"-compiler-framework-v2/domain.types/-float/-f-type/-f64/index.html","searchKeys":["F64","F64","domain.types.Float.FType.F64"]},{"name":"FUNCTION_ALREADY_DEFINED","description":"domain.ast.errors.SemanticError.Type.FUNCTION_ALREADY_DEFINED","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-f-u-n-c-t-i-o-n_-a-l-r-e-a-d-y_-d-e-f-i-n-e-d/index.html","searchKeys":["FUNCTION_ALREADY_DEFINED","FUNCTION_ALREADY_DEFINED","domain.ast.errors.SemanticError.Type.FUNCTION_ALREADY_DEFINED"]},{"name":"GE","description":"domain.ast.BinaryExpression.BinaryOperator.GE","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-g-e/index.html","searchKeys":["GE","GE","domain.ast.BinaryExpression.BinaryOperator.GE"]},{"name":"GT","description":"domain.ast.BinaryExpression.BinaryOperator.GT","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-g-t/index.html","searchKeys":["GT","GT","domain.ast.BinaryExpression.BinaryOperator.GT"]},{"name":"I16","description":"domain.types.Integer.IType.I16","location":"-compiler-framework-v2/domain.types/-integer/-i-type/-i16/index.html","searchKeys":["I16","I16","domain.types.Integer.IType.I16"]},{"name":"I32","description":"domain.types.Integer.IType.I32","location":"-compiler-framework-v2/domain.types/-integer/-i-type/-i32/index.html","searchKeys":["I32","I32","domain.types.Integer.IType.I32"]},{"name":"I64","description":"domain.types.Integer.IType.I64","location":"-compiler-framework-v2/domain.types/-integer/-i-type/-i64/index.html","searchKeys":["I64","I64","domain.types.Integer.IType.I64"]},{"name":"I8","description":"domain.types.Integer.IType.I8","location":"-compiler-framework-v2/domain.types/-integer/-i-type/-i8/index.html","searchKeys":["I8","I8","domain.types.Integer.IType.I8"]},{"name":"INDEX_NOT_INTEGER","description":"domain.ast.errors.SemanticError.Type.INDEX_NOT_INTEGER","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-i-n-d-e-x_-n-o-t_-i-n-t-e-g-e-r/index.html","searchKeys":["INDEX_NOT_INTEGER","INDEX_NOT_INTEGER","domain.ast.errors.SemanticError.Type.INDEX_NOT_INTEGER"]},{"name":"ISIZE","description":"domain.types.Integer.IType.ISIZE","location":"-compiler-framework-v2/domain.types/-integer/-i-type/-i-s-i-z-e/index.html","searchKeys":["ISIZE","ISIZE","domain.types.Integer.IType.ISIZE"]},{"name":"LE","description":"domain.ast.BinaryExpression.BinaryOperator.LE","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-l-e/index.html","searchKeys":["LE","LE","domain.ast.BinaryExpression.BinaryOperator.LE"]},{"name":"LT","description":"domain.ast.BinaryExpression.BinaryOperator.LT","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-l-t/index.html","searchKeys":["LT","LT","domain.ast.BinaryExpression.BinaryOperator.LT"]},{"name":"MOD","description":"domain.ast.BinaryExpression.BinaryOperator.MOD","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-m-o-d/index.html","searchKeys":["MOD","MOD","domain.ast.BinaryExpression.BinaryOperator.MOD"]},{"name":"MUL","description":"domain.ast.BinaryExpression.BinaryOperator.MUL","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-m-u-l/index.html","searchKeys":["MUL","MUL","domain.ast.BinaryExpression.BinaryOperator.MUL"]},{"name":"NE","description":"domain.ast.BinaryExpression.BinaryOperator.NE","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-n-e/index.html","searchKeys":["NE","NE","domain.ast.BinaryExpression.BinaryOperator.NE"]},{"name":"NEGATIVE","description":"domain.ast.UnaryExpression.UnaryOperator.NEGATIVE","location":"-compiler-framework-v2/domain.ast/-unary-expression/-unary-operator/-n-e-g-a-t-i-v-e/index.html","searchKeys":["NEGATIVE","NEGATIVE","domain.ast.UnaryExpression.UnaryOperator.NEGATIVE"]},{"name":"NOT","description":"domain.ast.UnaryExpression.UnaryOperator.NOT","location":"-compiler-framework-v2/domain.ast/-unary-expression/-unary-operator/-n-o-t/index.html","searchKeys":["NOT","NOT","domain.ast.UnaryExpression.UnaryOperator.NOT"]},{"name":"NOT_ARRAY","description":"domain.ast.errors.SemanticError.Type.NOT_ARRAY","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-n-o-t_-a-r-r-a-y/index.html","searchKeys":["NOT_ARRAY","NOT_ARRAY","domain.ast.errors.SemanticError.Type.NOT_ARRAY"]},{"name":"OR","description":"domain.ast.BinaryExpression.BinaryOperator.OR","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-o-r/index.html","searchKeys":["OR","OR","domain.ast.BinaryExpression.BinaryOperator.OR"]},{"name":"PARAMETER_TYPE_MISMATCH","description":"domain.ast.errors.SemanticError.Type.PARAMETER_TYPE_MISMATCH","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-p-a-r-a-m-e-t-e-r_-t-y-p-e_-m-i-s-m-a-t-c-h/index.html","searchKeys":["PARAMETER_TYPE_MISMATCH","PARAMETER_TYPE_MISMATCH","domain.ast.errors.SemanticError.Type.PARAMETER_TYPE_MISMATCH"]},{"name":"RETURN_OUTSIDE_FUNCTION","description":"domain.ast.errors.SemanticError.Type.RETURN_OUTSIDE_FUNCTION","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-r-e-t-u-r-n_-o-u-t-s-i-d-e_-f-u-n-c-t-i-o-n/index.html","searchKeys":["RETURN_OUTSIDE_FUNCTION","RETURN_OUTSIDE_FUNCTION","domain.ast.errors.SemanticError.Type.RETURN_OUTSIDE_FUNCTION"]},{"name":"SHL","description":"domain.ast.BinaryExpression.BinaryOperator.SHL","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-s-h-l/index.html","searchKeys":["SHL","SHL","domain.ast.BinaryExpression.BinaryOperator.SHL"]},{"name":"SHR","description":"domain.ast.BinaryExpression.BinaryOperator.SHR","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-s-h-r/index.html","searchKeys":["SHR","SHR","domain.ast.BinaryExpression.BinaryOperator.SHR"]},{"name":"STRUCT_ALREADY_DEFINED","description":"domain.ast.errors.SemanticError.Type.STRUCT_ALREADY_DEFINED","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-s-t-r-u-c-t_-a-l-r-e-a-d-y_-d-e-f-i-n-e-d/index.html","searchKeys":["STRUCT_ALREADY_DEFINED","STRUCT_ALREADY_DEFINED","domain.ast.errors.SemanticError.Type.STRUCT_ALREADY_DEFINED"]},{"name":"STRUCT_PROPERTY_ALREADY_DEFINED","description":"domain.ast.errors.SemanticError.Type.STRUCT_PROPERTY_ALREADY_DEFINED","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-s-t-r-u-c-t_-p-r-o-p-e-r-t-y_-a-l-r-e-a-d-y_-d-e-f-i-n-e-d/index.html","searchKeys":["STRUCT_PROPERTY_ALREADY_DEFINED","STRUCT_PROPERTY_ALREADY_DEFINED","domain.ast.errors.SemanticError.Type.STRUCT_PROPERTY_ALREADY_DEFINED"]},{"name":"SUB","description":"domain.ast.BinaryExpression.BinaryOperator.SUB","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-s-u-b/index.html","searchKeys":["SUB","SUB","domain.ast.BinaryExpression.BinaryOperator.SUB"]},{"name":"TYPE_MISMATCH","description":"domain.ast.errors.SemanticError.Type.TYPE_MISMATCH","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-t-y-p-e_-m-i-s-m-a-t-c-h/index.html","searchKeys":["TYPE_MISMATCH","TYPE_MISMATCH","domain.ast.errors.SemanticError.Type.TYPE_MISMATCH"]},{"name":"U16","description":"domain.types.Integer.IType.U16","location":"-compiler-framework-v2/domain.types/-integer/-i-type/-u16/index.html","searchKeys":["U16","U16","domain.types.Integer.IType.U16"]},{"name":"U8","description":"domain.types.Integer.IType.U8","location":"-compiler-framework-v2/domain.types/-integer/-i-type/-u8/index.html","searchKeys":["U8","U8","domain.types.Integer.IType.U8"]},{"name":"UNDEFINED_ARRAY","description":"domain.ast.errors.SemanticError.Type.UNDEFINED_ARRAY","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-u-n-d-e-f-i-n-e-d_-a-r-r-a-y/index.html","searchKeys":["UNDEFINED_ARRAY","UNDEFINED_ARRAY","domain.ast.errors.SemanticError.Type.UNDEFINED_ARRAY"]},{"name":"UNDEFINED_FUNCTION","description":"domain.ast.errors.SemanticError.Type.UNDEFINED_FUNCTION","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-u-n-d-e-f-i-n-e-d_-f-u-n-c-t-i-o-n/index.html","searchKeys":["UNDEFINED_FUNCTION","UNDEFINED_FUNCTION","domain.ast.errors.SemanticError.Type.UNDEFINED_FUNCTION"]},{"name":"UNDEFINED_STRUCT","description":"domain.ast.errors.SemanticError.Type.UNDEFINED_STRUCT","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-u-n-d-e-f-i-n-e-d_-s-t-r-u-c-t/index.html","searchKeys":["UNDEFINED_STRUCT","UNDEFINED_STRUCT","domain.ast.errors.SemanticError.Type.UNDEFINED_STRUCT"]},{"name":"UNDEFINED_TYPE","description":"domain.ast.errors.SemanticError.Type.UNDEFINED_TYPE","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-u-n-d-e-f-i-n-e-d_-t-y-p-e/index.html","searchKeys":["UNDEFINED_TYPE","UNDEFINED_TYPE","domain.ast.errors.SemanticError.Type.UNDEFINED_TYPE"]},{"name":"UNDEFINED_VARIABLE","description":"domain.ast.errors.SemanticError.Type.UNDEFINED_VARIABLE","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-u-n-d-e-f-i-n-e-d_-v-a-r-i-a-b-l-e/index.html","searchKeys":["UNDEFINED_VARIABLE","UNDEFINED_VARIABLE","domain.ast.errors.SemanticError.Type.UNDEFINED_VARIABLE"]},{"name":"USHR","description":"domain.ast.BinaryExpression.BinaryOperator.USHR","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-u-s-h-r/index.html","searchKeys":["USHR","USHR","domain.ast.BinaryExpression.BinaryOperator.USHR"]},{"name":"USIZE","description":"domain.types.Integer.IType.USIZE","location":"-compiler-framework-v2/domain.types/-integer/-i-type/-u-s-i-z-e/index.html","searchKeys":["USIZE","USIZE","domain.types.Integer.IType.USIZE"]},{"name":"VARIABLE_ALREADY_DEFINED","description":"domain.ast.errors.SemanticError.Type.VARIABLE_ALREADY_DEFINED","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-v-a-r-i-a-b-l-e_-a-l-r-e-a-d-y_-d-e-f-i-n-e-d/index.html","searchKeys":["VARIABLE_ALREADY_DEFINED","VARIABLE_ALREADY_DEFINED","domain.ast.errors.SemanticError.Type.VARIABLE_ALREADY_DEFINED"]},{"name":"WRONG_NUMBER_OF_PARAMETERS","description":"domain.ast.errors.SemanticError.Type.WRONG_NUMBER_OF_PARAMETERS","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/-w-r-o-n-g_-n-u-m-b-e-r_-o-f_-p-a-r-a-m-e-t-e-r-s/index.html","searchKeys":["WRONG_NUMBER_OF_PARAMETERS","WRONG_NUMBER_OF_PARAMETERS","domain.ast.errors.SemanticError.Type.WRONG_NUMBER_OF_PARAMETERS"]},{"name":"XOR","description":"domain.ast.BinaryExpression.BinaryOperator.XOR","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/-x-o-r/index.html","searchKeys":["XOR","XOR","domain.ast.BinaryExpression.BinaryOperator.XOR"]},{"name":"abstract class ParserWrapper(parser: Parser)","description":"compiler.ParserWrapper","location":"-compiler-framework-v2/compiler/-parser-wrapper/index.html","searchKeys":["ParserWrapper","abstract class ParserWrapper(parser: Parser)","compiler.ParserWrapper"]},{"name":"abstract fun analyze(node: AstObject): AstObject","description":"compiler.Analyzer.analyze","location":"-compiler-framework-v2/compiler/-analyzer/analyze.html","searchKeys":["analyze","abstract fun analyze(node: AstObject): AstObject","compiler.Analyzer.analyze"]},{"name":"abstract fun checkAssignmentCompatibility(leftType: Type, rightType: Type): Type?","description":"compiler.HelperInterface.checkAssignmentCompatibility","location":"-compiler-framework-v2/compiler/-helper-interface/check-assignment-compatibility.html","searchKeys":["checkAssignmentCompatibility","abstract fun checkAssignmentCompatibility(leftType: Type, rightType: Type): Type?","compiler.HelperInterface.checkAssignmentCompatibility"]},{"name":"abstract fun checkBinaryExpressionCompatibility(binaryExpression: BinaryExpression): Type?","description":"compiler.HelperInterface.checkBinaryExpressionCompatibility","location":"-compiler-framework-v2/compiler/-helper-interface/check-binary-expression-compatibility.html","searchKeys":["checkBinaryExpressionCompatibility","abstract fun checkBinaryExpressionCompatibility(binaryExpression: BinaryExpression): Type?","compiler.HelperInterface.checkBinaryExpressionCompatibility"]},{"name":"abstract fun checkUnaryExpressionCompatibility(unaryExpression: UnaryExpression): Type?","description":"compiler.HelperInterface.checkUnaryExpressionCompatibility","location":"-compiler-framework-v2/compiler/-helper-interface/check-unary-expression-compatibility.html","searchKeys":["checkUnaryExpressionCompatibility","abstract fun checkUnaryExpressionCompatibility(unaryExpression: UnaryExpression): Type?","compiler.HelperInterface.checkUnaryExpressionCompatibility"]},{"name":"abstract fun parse(): ParserRuleContext","description":"compiler.ParserWrapper.parse","location":"-compiler-framework-v2/compiler/-parser-wrapper/parse.html","searchKeys":["parse","abstract fun parse(): ParserRuleContext","compiler.ParserWrapper.parse"]},{"name":"abstract fun removeChild(child: Removable)","description":"domain.interfaces.HasOptionalChildren.removeChild","location":"-compiler-framework-v2/domain.interfaces/-has-optional-children/remove-child.html","searchKeys":["removeChild","abstract fun removeChild(child: Removable)","domain.interfaces.HasOptionalChildren.removeChild"]},{"name":"abstract fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.interfaces.IsParent.replaceChild","location":"-compiler-framework-v2/domain.interfaces/-is-parent/replace-child.html","searchKeys":["replaceChild","abstract fun replaceChild(initial: AstObject, replacement: AstObject)","domain.interfaces.IsParent.replaceChild"]},{"name":"abstract fun setParentForChildren()","description":"domain.interfaces.IsParent.setParentForChildren","location":"-compiler-framework-v2/domain.interfaces/-is-parent/set-parent-for-children.html","searchKeys":["setParentForChildren","abstract fun setParentForChildren()","domain.interfaces.IsParent.setParentForChildren"]},{"name":"abstract fun typeFromString(typeName: String): Type","description":"compiler.HelperInterface.typeFromString","location":"-compiler-framework-v2/compiler/-helper-interface/type-from-string.html","searchKeys":["typeFromString","abstract fun typeFromString(typeName: String): Type","compiler.HelperInterface.typeFromString"]},{"name":"abstract val scope: SymbolTable?","description":"domain.interfaces.AstObject.scope","location":"-compiler-framework-v2/domain.interfaces/-ast-object/scope.html","searchKeys":["scope","abstract val scope: SymbolTable?","domain.interfaces.AstObject.scope"]},{"name":"abstract val scope: SymbolTable?","description":"domain.interfaces.IsParent.scope","location":"-compiler-framework-v2/domain.interfaces/-is-parent/scope.html","searchKeys":["scope","abstract val scope: SymbolTable?","domain.interfaces.IsParent.scope"]},{"name":"abstract val title: String","description":"domain.interfaces.Type.title","location":"-compiler-framework-v2/domain.interfaces/-type/title.html","searchKeys":["title","abstract val title: String","domain.interfaces.Type.title"]},{"name":"abstract var line: Int","description":"domain.ast.errors.CompilationError.line","location":"-compiler-framework-v2/domain.ast.errors/-compilation-error/line.html","searchKeys":["line","abstract var line: Int","domain.ast.errors.CompilationError.line"]},{"name":"abstract var line: Int","description":"domain.interfaces.AstObject.line","location":"-compiler-framework-v2/domain.interfaces/-ast-object/line.html","searchKeys":["line","abstract var line: Int","domain.interfaces.AstObject.line"]},{"name":"abstract var parent: IsParent?","description":"domain.interfaces.AstObject.parent","location":"-compiler-framework-v2/domain.interfaces/-ast-object/parent.html","searchKeys":["parent","abstract var parent: IsParent?","domain.interfaces.AstObject.parent"]},{"name":"abstract var parent: IsParent?","description":"domain.interfaces.IsParent.parent","location":"-compiler-framework-v2/domain.interfaces/-is-parent/parent.html","searchKeys":["parent","abstract var parent: IsParent?","domain.interfaces.IsParent.parent"]},{"name":"abstract var typeName: String?","description":"domain.interfaces.Expression.typeName","location":"-compiler-framework-v2/domain.interfaces/-expression/type-name.html","searchKeys":["typeName","abstract var typeName: String?","domain.interfaces.Expression.typeName"]},{"name":"class CompileFailure(val errors: List<CompilationError>) : CompileResult","description":"compiler.CompileFailure","location":"-compiler-framework-v2/compiler/-compile-failure/index.html","searchKeys":["CompileFailure","class CompileFailure(val errors: List<CompilationError>) : CompileResult","compiler.CompileFailure"]},{"name":"class CompileSuccess(val compiledCode: String) : CompileResult","description":"compiler.CompileSuccess","location":"-compiler-framework-v2/compiler/-compile-success/index.html","searchKeys":["CompileSuccess","class CompileSuccess(val compiledCode: String) : CompileResult","compiler.CompileSuccess"]},{"name":"class Compiler(var lexer: Lexer, val parserWrapper: ParserWrapper, val visitor: ParseTreeVisitor<AstObject>, val analyzer: Analyzer?)","description":"compiler.Compiler","location":"-compiler-framework-v2/compiler/-compiler/index.html","searchKeys":["Compiler","class Compiler(var lexer: Lexer, val parserWrapper: ParserWrapper, val visitor: ParseTreeVisitor<AstObject>, val analyzer: Analyzer?)","compiler.Compiler"]},{"name":"class SymbolTable","description":"domain.SymbolTable","location":"-compiler-framework-v2/domain/-symbol-table/index.html","searchKeys":["SymbolTable","class SymbolTable","domain.SymbolTable"]},{"name":"constructor()","description":"domain.SymbolTable.SymbolTable","location":"-compiler-framework-v2/domain/-symbol-table/-symbol-table.html","searchKeys":["SymbolTable","constructor()","domain.SymbolTable.SymbolTable"]},{"name":"constructor(array: Expression, index: Expression, typeName: String? = null, line: Int)","description":"domain.ast.ArrayElement.ArrayElement","location":"-compiler-framework-v2/domain.ast/-array-element/-array-element.html","searchKeys":["ArrayElement","constructor(array: Expression, index: Expression, typeName: String? = null, line: Int)","domain.ast.ArrayElement.ArrayElement"]},{"name":"constructor(block: Block, line: Int)","description":"domain.ast.Module.Module","location":"-compiler-framework-v2/domain.ast/-module/-module.html","searchKeys":["Module","constructor(block: Block, line: Int)","domain.ast.Module.Module"]},{"name":"constructor(compiledCode: String)","description":"compiler.CompileSuccess.CompileSuccess","location":"-compiler-framework-v2/compiler/-compile-success/-compile-success.html","searchKeys":["CompileSuccess","constructor(compiledCode: String)","compiler.CompileSuccess.CompileSuccess"]},{"name":"constructor(condition: Expression, statement: Block, evaluation: Loop.Evaluation, line: Int)","description":"domain.ast.Loop.Loop","location":"-compiler-framework-v2/domain.ast/-loop/-loop.html","searchKeys":["Loop","constructor(condition: Expression, statement: Block, evaluation: Loop.Evaluation, line: Int)","domain.ast.Loop.Loop"]},{"name":"constructor(condition: Expression, then: Block, els: Block? = null, line: Int)","description":"domain.ast.IfClause.IfClause","location":"-compiler-framework-v2/domain.ast/-if-clause/-if-clause.html","searchKeys":["IfClause","constructor(condition: Expression, then: Block, els: Block? = null, line: Int)","domain.ast.IfClause.IfClause"]},{"name":"constructor(declarations: MutableList<AstObject>, line: Int)","description":"domain.ast.Group.Group","location":"-compiler-framework-v2/domain.ast/-group/-group.html","searchKeys":["Group","constructor(declarations: MutableList<AstObject>, line: Int)","domain.ast.Group.Group"]},{"name":"constructor(definedType: Type, line: Int)","description":"domain.ast.Definition.Definition","location":"-compiler-framework-v2/domain.ast/-definition/-definition.html","searchKeys":["Definition","constructor(definedType: Type, line: Int)","domain.ast.Definition.Definition"]},{"name":"constructor(errors: List<CompilationError>)","description":"compiler.CompileFailure.CompileFailure","location":"-compiler-framework-v2/compiler/-compile-failure/-compile-failure.html","searchKeys":["CompileFailure","constructor(errors: List<CompilationError>)","compiler.CompileFailure.CompileFailure"]},{"name":"constructor(expression: Expression, op: UnaryExpression.UnaryOperator, typeName: String? = null, line: Int)","description":"domain.ast.UnaryExpression.UnaryExpression","location":"-compiler-framework-v2/domain.ast/-unary-expression/-unary-expression.html","searchKeys":["UnaryExpression","constructor(expression: Expression, op: UnaryExpression.UnaryOperator, typeName: String? = null, line: Int)","domain.ast.UnaryExpression.UnaryExpression"]},{"name":"constructor(expression: Expression?, typeName: String? = null, line: Int)","description":"domain.ast.Return.Return","location":"-compiler-framework-v2/domain.ast/-return/-return.html","searchKeys":["Return","constructor(expression: Expression?, typeName: String? = null, line: Int)","domain.ast.Return.Return"]},{"name":"constructor(fType: Float.FType)","description":"domain.types.Float.Float","location":"-compiler-framework-v2/domain.types/-float/-float.html","searchKeys":["Float","constructor(fType: Float.FType)","domain.types.Float.Float"]},{"name":"constructor(from: Expression, typeName: String? = null, line: Int)","description":"domain.ast.Typecast.Typecast","location":"-compiler-framework-v2/domain.ast/-typecast/-typecast.html","searchKeys":["Typecast","constructor(from: Expression, typeName: String? = null, line: Int)","domain.ast.Typecast.Typecast"]},{"name":"constructor(function: Expression, parameters: MutableList<Expression>, typeName: String? = null, line: Int)","description":"domain.ast.FunctionCall.FunctionCall","location":"-compiler-framework-v2/domain.ast/-function-call/-function-call.html","searchKeys":["FunctionCall","constructor(function: Expression, parameters: MutableList<Expression>, typeName: String? = null, line: Int)","domain.ast.FunctionCall.FunctionCall"]},{"name":"constructor(iType: Integer.IType)","description":"domain.types.Integer.Integer","location":"-compiler-framework-v2/domain.types/-integer/-integer.html","searchKeys":["Integer","constructor(iType: Integer.IType)","domain.types.Integer.Integer"]},{"name":"constructor(id: String, line: Int, charPosition: Int, msg: String)","description":"domain.ast.errors.Error.Error","location":"-compiler-framework-v2/domain.ast.errors/-error/-error.html","searchKeys":["Error","constructor(id: String, line: Int, charPosition: Int, msg: String)","domain.ast.errors.Error.Error"]},{"name":"constructor(init: AstObject, loop: Loop, steps: Assignment, line: Int)","description":"domain.ast.ForLoop.ForLoop","location":"-compiler-framework-v2/domain.ast/-for-loop/-for-loop.html","searchKeys":["ForLoop","constructor(init: AstObject, loop: Loop, steps: Assignment, line: Int)","domain.ast.ForLoop.ForLoop"]},{"name":"constructor(left: Expression, right: Expression, op: BinaryExpression.BinaryOperator, typeName: String? = null, line: Int)","description":"domain.ast.BinaryExpression.BinaryExpression","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-expression.html","searchKeys":["BinaryExpression","constructor(left: Expression, right: Expression, op: BinaryExpression.BinaryOperator, typeName: String? = null, line: Int)","domain.ast.BinaryExpression.BinaryExpression"]},{"name":"constructor(lexer: Lexer, parserWrapper: ParserWrapper, visitor: ParseTreeVisitor<AstObject>, analyzer: Analyzer?)","description":"compiler.Compiler.Compiler","location":"-compiler-framework-v2/compiler/-compiler/-compiler.html","searchKeys":["Compiler","constructor(lexer: Lexer, parserWrapper: ParserWrapper, visitor: ParseTreeVisitor<AstObject>, analyzer: Analyzer?)","compiler.Compiler.Compiler"]},{"name":"constructor(parser: Parser)","description":"compiler.ParserWrapper.ParserWrapper","location":"-compiler-framework-v2/compiler/-parser-wrapper/-parser-wrapper.html","searchKeys":["ParserWrapper","constructor(parser: Parser)","compiler.ParserWrapper.ParserWrapper"]},{"name":"constructor(statements: MutableList<AstObject>, line: Int)","description":"domain.ast.Block.Block","location":"-compiler-framework-v2/domain.ast/-block/-block.html","searchKeys":["Block","constructor(statements: MutableList<AstObject>, line: Int)","domain.ast.Block.Block"]},{"name":"constructor(struct: Expression, field: String, typeName: String? = null, line: Int)","description":"domain.ast.StructElement.StructElement","location":"-compiler-framework-v2/domain.ast/-struct-element/-struct-element.html","searchKeys":["StructElement","constructor(struct: Expression, field: String, typeName: String? = null, line: Int)","domain.ast.StructElement.StructElement"]},{"name":"constructor(title: String = \"Boolean\")","description":"domain.types.Boolean.Boolean","location":"-compiler-framework-v2/domain.types/-boolean/-boolean.html","searchKeys":["Boolean","constructor(title: String = \"Boolean\")","domain.types.Boolean.Boolean"]},{"name":"constructor(title: String = \"String\")","description":"domain.types.Str.Str","location":"-compiler-framework-v2/domain.types/-str/-str.html","searchKeys":["Str","constructor(title: String = \"String\")","domain.types.Str.Str"]},{"name":"constructor(title: String = \"Symbol\")","description":"domain.types.Symbol.Symbol","location":"-compiler-framework-v2/domain.types/-symbol/-symbol.html","searchKeys":["Symbol","constructor(title: String = \"Symbol\")","domain.types.Symbol.Symbol"]},{"name":"constructor(title: String)","description":"domain.types.Placeholder.Placeholder","location":"-compiler-framework-v2/domain.types/-placeholder/-placeholder.html","searchKeys":["Placeholder","constructor(title: String)","domain.types.Placeholder.Placeholder"]},{"name":"constructor(title: String, parameters: MutableList<Property>, statements: Block?, returnTypeName: String)","description":"domain.types.Function.Function","location":"-compiler-framework-v2/domain.types/-function/-function.html","searchKeys":["Function","constructor(title: String, parameters: MutableList<Property>, statements: Block?, returnTypeName: String)","domain.types.Function.Function"]},{"name":"constructor(title: String, properties: MutableList<Property>)","description":"domain.types.Struct.Struct","location":"-compiler-framework-v2/domain.types/-struct/-struct.html","searchKeys":["Struct","constructor(title: String, properties: MutableList<Property>)","domain.types.Struct.Struct"]},{"name":"constructor(title: String, tp: Float.FType)","description":"domain.types.Float.Float","location":"-compiler-framework-v2/domain.types/-float/-float.html","searchKeys":["Float","constructor(title: String, tp: Float.FType)","domain.types.Float.Float"]},{"name":"constructor(title: String, tp: Integer.IType)","description":"domain.types.Integer.Integer","location":"-compiler-framework-v2/domain.types/-integer/-integer.html","searchKeys":["Integer","constructor(title: String, tp: Integer.IType)","domain.types.Integer.Integer"]},{"name":"constructor(title: String, typeName: String, length: Expression)","description":"domain.types.Array.Array","location":"-compiler-framework-v2/domain.types/-array/-array.html","searchKeys":["Array","constructor(title: String, typeName: String, length: Expression)","domain.types.Array.Array"]},{"name":"constructor(title: String, typeName: String? = null, defaultValue: Expression? = null, line: Int)","description":"domain.ast.Property.Property","location":"-compiler-framework-v2/domain.ast/-property/-property.html","searchKeys":["Property","constructor(title: String, typeName: String? = null, defaultValue: Expression? = null, line: Int)","domain.ast.Property.Property"]},{"name":"constructor(title: String, typeName: String? = null, line: Int)","description":"domain.ast.Identifier.Identifier","location":"-compiler-framework-v2/domain.ast/-identifier/-identifier.html","searchKeys":["Identifier","constructor(title: String, typeName: String? = null, line: Int)","domain.ast.Identifier.Identifier"]},{"name":"constructor(to: Assignable, from: Expression, line: Int)","description":"domain.ast.Assignment.Assignment","location":"-compiler-framework-v2/domain.ast/-assignment/-assignment.html","searchKeys":["Assignment","constructor(to: Assignable, from: Expression, line: Int)","domain.ast.Assignment.Assignment"]},{"name":"constructor(type: SemanticError.Type, line: Int)","description":"domain.ast.errors.SemanticError.SemanticError","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-semantic-error.html","searchKeys":["SemanticError","constructor(type: SemanticError.Type, line: Int)","domain.ast.errors.SemanticError.SemanticError"]},{"name":"constructor(value: String, typeName: String? = null, line: Int)","description":"domain.ast.Value.Value","location":"-compiler-framework-v2/domain.ast/-value/-value.html","searchKeys":["Value","constructor(value: String, typeName: String? = null, line: Int)","domain.ast.Value.Value"]},{"name":"constructor(variable: Identifier, init: Expression? = null, line: Int)","description":"domain.ast.VariableDefinition.VariableDefinition","location":"-compiler-framework-v2/domain.ast/-variable-definition/-variable-definition.html","searchKeys":["VariableDefinition","constructor(variable: Identifier, init: Expression? = null, line: Int)","domain.ast.VariableDefinition.VariableDefinition"]},{"name":"constructor(variable: String, iterator: Identifier, statement: Block, line: Int)","description":"domain.ast.Iteration.Iteration","location":"-compiler-framework-v2/domain.ast/-iteration/-iteration.html","searchKeys":["Iteration","constructor(variable: String, iterator: Identifier, statement: Block, line: Int)","domain.ast.Iteration.Iteration"]},{"name":"data class Array(val title: String, var typeName: String, var length: Expression) : Type, IsParent","description":"domain.types.Array","location":"-compiler-framework-v2/domain.types/-array/index.html","searchKeys":["Array","data class Array(val title: String, var typeName: String, var length: Expression) : Type, IsParent","domain.types.Array"]},{"name":"data class ArrayElement(var array: Expression, var index: Expression, var typeName: String? = null, var line: Int) : Assignable, IsParent","description":"domain.ast.ArrayElement","location":"-compiler-framework-v2/domain.ast/-array-element/index.html","searchKeys":["ArrayElement","data class ArrayElement(var array: Expression, var index: Expression, var typeName: String? = null, var line: Int) : Assignable, IsParent","domain.ast.ArrayElement"]},{"name":"data class Assignment(var to: Assignable, var from: Expression, var line: Int) : AstObject, IsParent","description":"domain.ast.Assignment","location":"-compiler-framework-v2/domain.ast/-assignment/index.html","searchKeys":["Assignment","data class Assignment(var to: Assignable, var from: Expression, var line: Int) : AstObject, IsParent","domain.ast.Assignment"]},{"name":"data class BinaryExpression(var left: Expression, var right: Expression, var op: BinaryExpression.BinaryOperator, var typeName: String? = null, var line: Int) : Expression, IsParent","description":"domain.ast.BinaryExpression","location":"-compiler-framework-v2/domain.ast/-binary-expression/index.html","searchKeys":["BinaryExpression","data class BinaryExpression(var left: Expression, var right: Expression, var op: BinaryExpression.BinaryOperator, var typeName: String? = null, var line: Int) : Expression, IsParent","domain.ast.BinaryExpression"]},{"name":"data class Block(val statements: MutableList<AstObject>, var line: Int) : AstObject, HasOptionalChildren","description":"domain.ast.Block","location":"-compiler-framework-v2/domain.ast/-block/index.html","searchKeys":["Block","data class Block(val statements: MutableList<AstObject>, var line: Int) : AstObject, HasOptionalChildren","domain.ast.Block"]},{"name":"data class Boolean(val title: String = \"Boolean\") : Type","description":"domain.types.Boolean","location":"-compiler-framework-v2/domain.types/-boolean/index.html","searchKeys":["Boolean","data class Boolean(val title: String = \"Boolean\") : Type","domain.types.Boolean"]},{"name":"data class Definition(var definedType: Type, var line: Int) : Removable, IsParent","description":"domain.ast.Definition","location":"-compiler-framework-v2/domain.ast/-definition/index.html","searchKeys":["Definition","data class Definition(var definedType: Type, var line: Int) : Removable, IsParent","domain.ast.Definition"]},{"name":"data class Error(var id: String, var line: Int, var charPosition: Int, var msg: String) : CompilationError","description":"domain.ast.errors.Error","location":"-compiler-framework-v2/domain.ast.errors/-error/index.html","searchKeys":["Error","data class Error(var id: String, var line: Int, var charPosition: Int, var msg: String) : CompilationError","domain.ast.errors.Error"]},{"name":"data class Float(var fType: Float.FType) : Type","description":"domain.types.Float","location":"-compiler-framework-v2/domain.types/-float/index.html","searchKeys":["Float","data class Float(var fType: Float.FType) : Type","domain.types.Float"]},{"name":"data class ForLoop(var init: AstObject, var loop: Loop, var steps: Assignment, var line: Int) : AstObject, IsParent","description":"domain.ast.ForLoop","location":"-compiler-framework-v2/domain.ast/-for-loop/index.html","searchKeys":["ForLoop","data class ForLoop(var init: AstObject, var loop: Loop, var steps: Assignment, var line: Int) : AstObject, IsParent","domain.ast.ForLoop"]},{"name":"data class Function(val title: String, val parameters: MutableList<Property>, var statements: Block?, val returnTypeName: String) : Type, IsParent","description":"domain.types.Function","location":"-compiler-framework-v2/domain.types/-function/index.html","searchKeys":["Function","data class Function(val title: String, val parameters: MutableList<Property>, var statements: Block?, val returnTypeName: String) : Type, IsParent","domain.types.Function"]},{"name":"data class FunctionCall(var function: Expression, var parameters: MutableList<Expression>, var typeName: String? = null, var line: Int) : Expression, IsParent","description":"domain.ast.FunctionCall","location":"-compiler-framework-v2/domain.ast/-function-call/index.html","searchKeys":["FunctionCall","data class FunctionCall(var function: Expression, var parameters: MutableList<Expression>, var typeName: String? = null, var line: Int) : Expression, IsParent","domain.ast.FunctionCall"]},{"name":"data class Group(var declarations: MutableList<AstObject>, var line: Int) : Removable, IsParent","description":"domain.ast.Group","location":"-compiler-framework-v2/domain.ast/-group/index.html","searchKeys":["Group","data class Group(var declarations: MutableList<AstObject>, var line: Int) : Removable, IsParent","domain.ast.Group"]},{"name":"data class Identifier(var title: String, var typeName: String? = null, var line: Int) : Assignable","description":"domain.ast.Identifier","location":"-compiler-framework-v2/domain.ast/-identifier/index.html","searchKeys":["Identifier","data class Identifier(var title: String, var typeName: String? = null, var line: Int) : Assignable","domain.ast.Identifier"]},{"name":"data class IfClause(var condition: Expression, var then: Block, var els: Block? = null, var line: Int) : IsParent, AstObject","description":"domain.ast.IfClause","location":"-compiler-framework-v2/domain.ast/-if-clause/index.html","searchKeys":["IfClause","data class IfClause(var condition: Expression, var then: Block, var els: Block? = null, var line: Int) : IsParent, AstObject","domain.ast.IfClause"]},{"name":"data class Integer(var iType: Integer.IType) : Type","description":"domain.types.Integer","location":"-compiler-framework-v2/domain.types/-integer/index.html","searchKeys":["Integer","data class Integer(var iType: Integer.IType) : Type","domain.types.Integer"]},{"name":"data class Iteration(var variable: String, var iterator: Identifier, var statement: Block, var line: Int) : AstObject, IsParent","description":"domain.ast.Iteration","location":"-compiler-framework-v2/domain.ast/-iteration/index.html","searchKeys":["Iteration","data class Iteration(var variable: String, var iterator: Identifier, var statement: Block, var line: Int) : AstObject, IsParent","domain.ast.Iteration"]},{"name":"data class Loop(var condition: Expression, var statement: Block, var evaluation: Loop.Evaluation, var line: Int) : AstObject, IsParent","description":"domain.ast.Loop","location":"-compiler-framework-v2/domain.ast/-loop/index.html","searchKeys":["Loop","data class Loop(var condition: Expression, var statement: Block, var evaluation: Loop.Evaluation, var line: Int) : AstObject, IsParent","domain.ast.Loop"]},{"name":"data class Module(var block: Block, var line: Int) : IsParent, AstObject","description":"domain.ast.Module","location":"-compiler-framework-v2/domain.ast/-module/index.html","searchKeys":["Module","data class Module(var block: Block, var line: Int) : IsParent, AstObject","domain.ast.Module"]},{"name":"data class Placeholder(val title: String) : Type","description":"domain.types.Placeholder","location":"-compiler-framework-v2/domain.types/-placeholder/index.html","searchKeys":["Placeholder","data class Placeholder(val title: String) : Type","domain.types.Placeholder"]},{"name":"data class Property(var title: String, var typeName: String? = null, var defaultValue: Expression? = null, var line: Int) : Expression, IsParent","description":"domain.ast.Property","location":"-compiler-framework-v2/domain.ast/-property/index.html","searchKeys":["Property","data class Property(var title: String, var typeName: String? = null, var defaultValue: Expression? = null, var line: Int) : Expression, IsParent","domain.ast.Property"]},{"name":"data class Return(var expression: Expression?, var typeName: String? = null, var line: Int) : Expression, IsParent","description":"domain.ast.Return","location":"-compiler-framework-v2/domain.ast/-return/index.html","searchKeys":["Return","data class Return(var expression: Expression?, var typeName: String? = null, var line: Int) : Expression, IsParent","domain.ast.Return"]},{"name":"data class SemanticError(var type: SemanticError.Type, var line: Int) : CompilationError","description":"domain.ast.errors.SemanticError","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/index.html","searchKeys":["SemanticError","data class SemanticError(var type: SemanticError.Type, var line: Int) : CompilationError","domain.ast.errors.SemanticError"]},{"name":"data class Str(val title: String = \"String\") : Type","description":"domain.types.Str","location":"-compiler-framework-v2/domain.types/-str/index.html","searchKeys":["Str","data class Str(val title: String = \"String\") : Type","domain.types.Str"]},{"name":"data class Struct(val title: String, var properties: MutableList<Property>) : Type, IsParent","description":"domain.types.Struct","location":"-compiler-framework-v2/domain.types/-struct/index.html","searchKeys":["Struct","data class Struct(val title: String, var properties: MutableList<Property>) : Type, IsParent","domain.types.Struct"]},{"name":"data class StructElement(var struct: Expression, var field: String, var typeName: String? = null, var line: Int) : Assignable, IsParent","description":"domain.ast.StructElement","location":"-compiler-framework-v2/domain.ast/-struct-element/index.html","searchKeys":["StructElement","data class StructElement(var struct: Expression, var field: String, var typeName: String? = null, var line: Int) : Assignable, IsParent","domain.ast.StructElement"]},{"name":"data class Symbol(val title: String = \"Symbol\") : Type","description":"domain.types.Symbol","location":"-compiler-framework-v2/domain.types/-symbol/index.html","searchKeys":["Symbol","data class Symbol(val title: String = \"Symbol\") : Type","domain.types.Symbol"]},{"name":"data class Typecast(var from: Expression, var typeName: String? = null, var line: Int) : Expression, IsParent","description":"domain.ast.Typecast","location":"-compiler-framework-v2/domain.ast/-typecast/index.html","searchKeys":["Typecast","data class Typecast(var from: Expression, var typeName: String? = null, var line: Int) : Expression, IsParent","domain.ast.Typecast"]},{"name":"data class UnaryExpression(var expression: Expression, var op: UnaryExpression.UnaryOperator, var typeName: String? = null, var line: Int) : Expression, IsParent","description":"domain.ast.UnaryExpression","location":"-compiler-framework-v2/domain.ast/-unary-expression/index.html","searchKeys":["UnaryExpression","data class UnaryExpression(var expression: Expression, var op: UnaryExpression.UnaryOperator, var typeName: String? = null, var line: Int) : Expression, IsParent","domain.ast.UnaryExpression"]},{"name":"data class Value(var value: String, var typeName: String? = null, var line: Int) : AstObject, Expression","description":"domain.ast.Value","location":"-compiler-framework-v2/domain.ast/-value/index.html","searchKeys":["Value","data class Value(var value: String, var typeName: String? = null, var line: Int) : AstObject, Expression","domain.ast.Value"]},{"name":"data class VariableDefinition(var variable: Identifier, var init: Expression? = null, var line: Int) : Removable, IsParent","description":"domain.ast.VariableDefinition","location":"-compiler-framework-v2/domain.ast/-variable-definition/index.html","searchKeys":["VariableDefinition","data class VariableDefinition(var variable: Identifier, var init: Expression? = null, var line: Int) : Removable, IsParent","domain.ast.VariableDefinition"]},{"name":"enum BinaryOperator : Enum<BinaryExpression.BinaryOperator> ","description":"domain.ast.BinaryExpression.BinaryOperator","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/index.html","searchKeys":["BinaryOperator","enum BinaryOperator : Enum<BinaryExpression.BinaryOperator> ","domain.ast.BinaryExpression.BinaryOperator"]},{"name":"enum Evaluation : Enum<Loop.Evaluation> ","description":"domain.ast.Loop.Evaluation","location":"-compiler-framework-v2/domain.ast/-loop/-evaluation/index.html","searchKeys":["Evaluation","enum Evaluation : Enum<Loop.Evaluation> ","domain.ast.Loop.Evaluation"]},{"name":"enum FType : Enum<Float.FType> ","description":"domain.types.Float.FType","location":"-compiler-framework-v2/domain.types/-float/-f-type/index.html","searchKeys":["FType","enum FType : Enum<Float.FType> ","domain.types.Float.FType"]},{"name":"enum IType : Enum<Integer.IType> ","description":"domain.types.Integer.IType","location":"-compiler-framework-v2/domain.types/-integer/-i-type/index.html","searchKeys":["IType","enum IType : Enum<Integer.IType> ","domain.types.Integer.IType"]},{"name":"enum Type : Enum<SemanticError.Type> ","description":"domain.ast.errors.SemanticError.Type","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/index.html","searchKeys":["Type","enum Type : Enum<SemanticError.Type> ","domain.ast.errors.SemanticError.Type"]},{"name":"enum UnaryOperator : Enum<UnaryExpression.UnaryOperator> ","description":"domain.ast.UnaryExpression.UnaryOperator","location":"-compiler-framework-v2/domain.ast/-unary-expression/-unary-operator/index.html","searchKeys":["UnaryOperator","enum UnaryOperator : Enum<UnaryExpression.UnaryOperator> ","domain.ast.UnaryExpression.UnaryOperator"]},{"name":"fun compile(program: String): CompileResult","description":"compiler.Compiler.compile","location":"-compiler-framework-v2/compiler/-compiler/compile.html","searchKeys":["compile","fun compile(program: String): CompileResult","compiler.Compiler.compile"]},{"name":"fun fromString(s: String): Float.FType","description":"domain.types.Float.FType.fromString","location":"-compiler-framework-v2/domain.types/-float/-f-type/from-string.html","searchKeys":["fromString","fun fromString(s: String): Float.FType","domain.types.Float.FType.fromString"]},{"name":"fun fromString(s: String): Integer.IType","description":"domain.types.Integer.IType.fromString","location":"-compiler-framework-v2/domain.types/-integer/-i-type/from-string.html","searchKeys":["fromString","fun fromString(s: String): Integer.IType","domain.types.Integer.IType.fromString"]},{"name":"fun jsonVal(): String","description":"domain.types.Float.FType.jsonVal","location":"-compiler-framework-v2/domain.types/-float/-f-type/json-val.html","searchKeys":["jsonVal","fun jsonVal(): String","domain.types.Float.FType.jsonVal"]},{"name":"fun jsonVal(): String","description":"domain.types.Integer.IType.jsonVal","location":"-compiler-framework-v2/domain.types/-integer/-i-type/json-val.html","searchKeys":["jsonVal","fun jsonVal(): String","domain.types.Integer.IType.jsonVal"]},{"name":"fun valueOf(value: String): BinaryExpression.BinaryOperator","description":"domain.ast.BinaryExpression.BinaryOperator.valueOf","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): BinaryExpression.BinaryOperator","domain.ast.BinaryExpression.BinaryOperator.valueOf"]},{"name":"fun valueOf(value: String): Float.FType","description":"domain.types.Float.FType.valueOf","location":"-compiler-framework-v2/domain.types/-float/-f-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Float.FType","domain.types.Float.FType.valueOf"]},{"name":"fun valueOf(value: String): Integer.IType","description":"domain.types.Integer.IType.valueOf","location":"-compiler-framework-v2/domain.types/-integer/-i-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Integer.IType","domain.types.Integer.IType.valueOf"]},{"name":"fun valueOf(value: String): Loop.Evaluation","description":"domain.ast.Loop.Evaluation.valueOf","location":"-compiler-framework-v2/domain.ast/-loop/-evaluation/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Loop.Evaluation","domain.ast.Loop.Evaluation.valueOf"]},{"name":"fun valueOf(value: String): SemanticError.Type","description":"domain.ast.errors.SemanticError.Type.valueOf","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SemanticError.Type","domain.ast.errors.SemanticError.Type.valueOf"]},{"name":"fun valueOf(value: String): UnaryExpression.UnaryOperator","description":"domain.ast.UnaryExpression.UnaryOperator.valueOf","location":"-compiler-framework-v2/domain.ast/-unary-expression/-unary-operator/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): UnaryExpression.UnaryOperator","domain.ast.UnaryExpression.UnaryOperator.valueOf"]},{"name":"fun values(): Array<BinaryExpression.BinaryOperator>","description":"domain.ast.BinaryExpression.BinaryOperator.values","location":"-compiler-framework-v2/domain.ast/-binary-expression/-binary-operator/values.html","searchKeys":["values","fun values(): Array<BinaryExpression.BinaryOperator>","domain.ast.BinaryExpression.BinaryOperator.values"]},{"name":"fun values(): Array<Float.FType>","description":"domain.types.Float.FType.values","location":"-compiler-framework-v2/domain.types/-float/-f-type/values.html","searchKeys":["values","fun values(): Array<Float.FType>","domain.types.Float.FType.values"]},{"name":"fun values(): Array<Integer.IType>","description":"domain.types.Integer.IType.values","location":"-compiler-framework-v2/domain.types/-integer/-i-type/values.html","searchKeys":["values","fun values(): Array<Integer.IType>","domain.types.Integer.IType.values"]},{"name":"fun values(): Array<Loop.Evaluation>","description":"domain.ast.Loop.Evaluation.values","location":"-compiler-framework-v2/domain.ast/-loop/-evaluation/values.html","searchKeys":["values","fun values(): Array<Loop.Evaluation>","domain.ast.Loop.Evaluation.values"]},{"name":"fun values(): Array<SemanticError.Type>","description":"domain.ast.errors.SemanticError.Type.values","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/values.html","searchKeys":["values","fun values(): Array<SemanticError.Type>","domain.ast.errors.SemanticError.Type.values"]},{"name":"fun values(): Array<UnaryExpression.UnaryOperator>","description":"domain.ast.UnaryExpression.UnaryOperator.values","location":"-compiler-framework-v2/domain.ast/-unary-expression/-unary-operator/values.html","searchKeys":["values","fun values(): Array<UnaryExpression.UnaryOperator>","domain.ast.UnaryExpression.UnaryOperator.values"]},{"name":"interface Analyzer","description":"compiler.Analyzer","location":"-compiler-framework-v2/compiler/-analyzer/index.html","searchKeys":["Analyzer","interface Analyzer","compiler.Analyzer"]},{"name":"interface Assignable : Expression","description":"domain.interfaces.Assignable","location":"-compiler-framework-v2/domain.interfaces/-assignable/index.html","searchKeys":["Assignable","interface Assignable : Expression","domain.interfaces.Assignable"]},{"name":"interface AstObject","description":"domain.interfaces.AstObject","location":"-compiler-framework-v2/domain.interfaces/-ast-object/index.html","searchKeys":["AstObject","interface AstObject","domain.interfaces.AstObject"]},{"name":"interface CompilationError","description":"domain.ast.errors.CompilationError","location":"-compiler-framework-v2/domain.ast.errors/-compilation-error/index.html","searchKeys":["CompilationError","interface CompilationError","domain.ast.errors.CompilationError"]},{"name":"interface Expression : AstObject","description":"domain.interfaces.Expression","location":"-compiler-framework-v2/domain.interfaces/-expression/index.html","searchKeys":["Expression","interface Expression : AstObject","domain.interfaces.Expression"]},{"name":"interface HasOptionalChildren : IsParent","description":"domain.interfaces.HasOptionalChildren","location":"-compiler-framework-v2/domain.interfaces/-has-optional-children/index.html","searchKeys":["HasOptionalChildren","interface HasOptionalChildren : IsParent","domain.interfaces.HasOptionalChildren"]},{"name":"interface HelperInterface","description":"compiler.HelperInterface","location":"-compiler-framework-v2/compiler/-helper-interface/index.html","searchKeys":["HelperInterface","interface HelperInterface","compiler.HelperInterface"]},{"name":"interface IsParent","description":"domain.interfaces.IsParent","location":"-compiler-framework-v2/domain.interfaces/-is-parent/index.html","searchKeys":["IsParent","interface IsParent","domain.interfaces.IsParent"]},{"name":"interface Removable : AstObject","description":"domain.interfaces.Removable","location":"-compiler-framework-v2/domain.interfaces/-removable/index.html","searchKeys":["Removable","interface Removable : AstObject","domain.interfaces.Removable"]},{"name":"interface Type","description":"domain.interfaces.Type","location":"-compiler-framework-v2/domain.interfaces/-type/index.html","searchKeys":["Type","interface Type","domain.interfaces.Type"]},{"name":"lateinit var owner: IsParent","description":"domain.SymbolTable.owner","location":"-compiler-framework-v2/domain/-symbol-table/owner.html","searchKeys":["owner","lateinit var owner: IsParent","domain.SymbolTable.owner"]},{"name":"object Companion","description":"compiler.Compiler.Companion","location":"-compiler-framework-v2/compiler/-compiler/-companion/index.html","searchKeys":["Companion","object Companion","compiler.Compiler.Companion"]},{"name":"open fun removeFromParent()","description":"domain.interfaces.Removable.removeFromParent","location":"-compiler-framework-v2/domain.interfaces/-removable/remove-from-parent.html","searchKeys":["removeFromParent","open fun removeFromParent()","domain.interfaces.Removable.removeFromParent"]},{"name":"open override fun removeChild(child: Removable)","description":"domain.ast.Block.removeChild","location":"-compiler-framework-v2/domain.ast/-block/remove-child.html","searchKeys":["removeChild","open override fun removeChild(child: Removable)","domain.ast.Block.removeChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.ArrayElement.replaceChild","location":"-compiler-framework-v2/domain.ast/-array-element/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.ArrayElement.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.Assignment.replaceChild","location":"-compiler-framework-v2/domain.ast/-assignment/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.Assignment.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.BinaryExpression.replaceChild","location":"-compiler-framework-v2/domain.ast/-binary-expression/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.BinaryExpression.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.Block.replaceChild","location":"-compiler-framework-v2/domain.ast/-block/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.Block.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.Definition.replaceChild","location":"-compiler-framework-v2/domain.ast/-definition/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.Definition.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.ForLoop.replaceChild","location":"-compiler-framework-v2/domain.ast/-for-loop/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.ForLoop.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.FunctionCall.replaceChild","location":"-compiler-framework-v2/domain.ast/-function-call/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.FunctionCall.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.Group.replaceChild","location":"-compiler-framework-v2/domain.ast/-group/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.Group.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.IfClause.replaceChild","location":"-compiler-framework-v2/domain.ast/-if-clause/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.IfClause.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.Iteration.replaceChild","location":"-compiler-framework-v2/domain.ast/-iteration/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.Iteration.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.Loop.replaceChild","location":"-compiler-framework-v2/domain.ast/-loop/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.Loop.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.Module.replaceChild","location":"-compiler-framework-v2/domain.ast/-module/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.Module.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.Property.replaceChild","location":"-compiler-framework-v2/domain.ast/-property/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.Property.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.Return.replaceChild","location":"-compiler-framework-v2/domain.ast/-return/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.Return.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.StructElement.replaceChild","location":"-compiler-framework-v2/domain.ast/-struct-element/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.StructElement.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.Typecast.replaceChild","location":"-compiler-framework-v2/domain.ast/-typecast/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.Typecast.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.UnaryExpression.replaceChild","location":"-compiler-framework-v2/domain.ast/-unary-expression/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.UnaryExpression.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.ast.VariableDefinition.replaceChild","location":"-compiler-framework-v2/domain.ast/-variable-definition/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.ast.VariableDefinition.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.types.Array.replaceChild","location":"-compiler-framework-v2/domain.types/-array/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.types.Array.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.types.Function.replaceChild","location":"-compiler-framework-v2/domain.types/-function/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.types.Function.replaceChild"]},{"name":"open override fun replaceChild(initial: AstObject, replacement: AstObject)","description":"domain.types.Struct.replaceChild","location":"-compiler-framework-v2/domain.types/-struct/replace-child.html","searchKeys":["replaceChild","open override fun replaceChild(initial: AstObject, replacement: AstObject)","domain.types.Struct.replaceChild"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.ArrayElement.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-array-element/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.ArrayElement.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.Assignment.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-assignment/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.Assignment.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.BinaryExpression.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-binary-expression/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.BinaryExpression.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.Block.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-block/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.Block.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.Definition.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-definition/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.Definition.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.ForLoop.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-for-loop/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.ForLoop.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.FunctionCall.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-function-call/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.FunctionCall.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.Group.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-group/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.Group.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.IfClause.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-if-clause/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.IfClause.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.Iteration.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-iteration/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.Iteration.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.Loop.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-loop/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.Loop.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.Module.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-module/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.Module.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.Property.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-property/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.Property.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.Return.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-return/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.Return.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.StructElement.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-struct-element/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.StructElement.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.Typecast.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-typecast/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.Typecast.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.UnaryExpression.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-unary-expression/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.UnaryExpression.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.ast.VariableDefinition.setParentForChildren","location":"-compiler-framework-v2/domain.ast/-variable-definition/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.ast.VariableDefinition.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.types.Array.setParentForChildren","location":"-compiler-framework-v2/domain.types/-array/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.types.Array.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.types.Function.setParentForChildren","location":"-compiler-framework-v2/domain.types/-function/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.types.Function.setParentForChildren"]},{"name":"open override fun setParentForChildren()","description":"domain.types.Struct.setParentForChildren","location":"-compiler-framework-v2/domain.types/-struct/set-parent-for-children.html","searchKeys":["setParentForChildren","open override fun setParentForChildren()","domain.types.Struct.setParentForChildren"]},{"name":"open override val scope: SymbolTable","description":"domain.ast.Block.scope","location":"-compiler-framework-v2/domain.ast/-block/scope.html","searchKeys":["scope","open override val scope: SymbolTable","domain.ast.Block.scope"]},{"name":"open override val scope: SymbolTable","description":"domain.types.Function.scope","location":"-compiler-framework-v2/domain.types/-function/scope.html","searchKeys":["scope","open override val scope: SymbolTable","domain.types.Function.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.ArrayElement.scope","location":"-compiler-framework-v2/domain.ast/-array-element/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.ArrayElement.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.Assignment.scope","location":"-compiler-framework-v2/domain.ast/-assignment/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.Assignment.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.BinaryExpression.scope","location":"-compiler-framework-v2/domain.ast/-binary-expression/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.BinaryExpression.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.Definition.scope","location":"-compiler-framework-v2/domain.ast/-definition/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.Definition.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.ForLoop.scope","location":"-compiler-framework-v2/domain.ast/-for-loop/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.ForLoop.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.FunctionCall.scope","location":"-compiler-framework-v2/domain.ast/-function-call/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.FunctionCall.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.Group.scope","location":"-compiler-framework-v2/domain.ast/-group/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.Group.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.Identifier.scope","location":"-compiler-framework-v2/domain.ast/-identifier/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.Identifier.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.IfClause.scope","location":"-compiler-framework-v2/domain.ast/-if-clause/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.IfClause.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.Iteration.scope","location":"-compiler-framework-v2/domain.ast/-iteration/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.Iteration.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.Loop.scope","location":"-compiler-framework-v2/domain.ast/-loop/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.Loop.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.Property.scope","location":"-compiler-framework-v2/domain.ast/-property/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.Property.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.Return.scope","location":"-compiler-framework-v2/domain.ast/-return/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.Return.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.StructElement.scope","location":"-compiler-framework-v2/domain.ast/-struct-element/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.StructElement.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.Typecast.scope","location":"-compiler-framework-v2/domain.ast/-typecast/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.Typecast.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.UnaryExpression.scope","location":"-compiler-framework-v2/domain.ast/-unary-expression/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.UnaryExpression.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.Value.scope","location":"-compiler-framework-v2/domain.ast/-value/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.Value.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.ast.VariableDefinition.scope","location":"-compiler-framework-v2/domain.ast/-variable-definition/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.ast.VariableDefinition.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.types.Array.scope","location":"-compiler-framework-v2/domain.types/-array/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.types.Array.scope"]},{"name":"open override val scope: SymbolTable?","description":"domain.types.Struct.scope","location":"-compiler-framework-v2/domain.types/-struct/scope.html","searchKeys":["scope","open override val scope: SymbolTable?","domain.types.Struct.scope"]},{"name":"open override val scope: SymbolTable? = null","description":"domain.ast.Module.scope","location":"-compiler-framework-v2/domain.ast/-module/scope.html","searchKeys":["scope","open override val scope: SymbolTable? = null","domain.ast.Module.scope"]},{"name":"open override val title: String","description":"domain.types.Array.title","location":"-compiler-framework-v2/domain.types/-array/title.html","searchKeys":["title","open override val title: String","domain.types.Array.title"]},{"name":"open override val title: String","description":"domain.types.Boolean.title","location":"-compiler-framework-v2/domain.types/-boolean/title.html","searchKeys":["title","open override val title: String","domain.types.Boolean.title"]},{"name":"open override val title: String","description":"domain.types.Float.title","location":"-compiler-framework-v2/domain.types/-float/title.html","searchKeys":["title","open override val title: String","domain.types.Float.title"]},{"name":"open override val title: String","description":"domain.types.Function.title","location":"-compiler-framework-v2/domain.types/-function/title.html","searchKeys":["title","open override val title: String","domain.types.Function.title"]},{"name":"open override val title: String","description":"domain.types.Integer.title","location":"-compiler-framework-v2/domain.types/-integer/title.html","searchKeys":["title","open override val title: String","domain.types.Integer.title"]},{"name":"open override val title: String","description":"domain.types.Placeholder.title","location":"-compiler-framework-v2/domain.types/-placeholder/title.html","searchKeys":["title","open override val title: String","domain.types.Placeholder.title"]},{"name":"open override val title: String","description":"domain.types.Str.title","location":"-compiler-framework-v2/domain.types/-str/title.html","searchKeys":["title","open override val title: String","domain.types.Str.title"]},{"name":"open override val title: String","description":"domain.types.Struct.title","location":"-compiler-framework-v2/domain.types/-struct/title.html","searchKeys":["title","open override val title: String","domain.types.Struct.title"]},{"name":"open override val title: String","description":"domain.types.Symbol.title","location":"-compiler-framework-v2/domain.types/-symbol/title.html","searchKeys":["title","open override val title: String","domain.types.Symbol.title"]},{"name":"open override var line: Int","description":"domain.ast.ArrayElement.line","location":"-compiler-framework-v2/domain.ast/-array-element/line.html","searchKeys":["line","open override var line: Int","domain.ast.ArrayElement.line"]},{"name":"open override var line: Int","description":"domain.ast.Assignment.line","location":"-compiler-framework-v2/domain.ast/-assignment/line.html","searchKeys":["line","open override var line: Int","domain.ast.Assignment.line"]},{"name":"open override var line: Int","description":"domain.ast.BinaryExpression.line","location":"-compiler-framework-v2/domain.ast/-binary-expression/line.html","searchKeys":["line","open override var line: Int","domain.ast.BinaryExpression.line"]},{"name":"open override var line: Int","description":"domain.ast.Block.line","location":"-compiler-framework-v2/domain.ast/-block/line.html","searchKeys":["line","open override var line: Int","domain.ast.Block.line"]},{"name":"open override var line: Int","description":"domain.ast.Definition.line","location":"-compiler-framework-v2/domain.ast/-definition/line.html","searchKeys":["line","open override var line: Int","domain.ast.Definition.line"]},{"name":"open override var line: Int","description":"domain.ast.ForLoop.line","location":"-compiler-framework-v2/domain.ast/-for-loop/line.html","searchKeys":["line","open override var line: Int","domain.ast.ForLoop.line"]},{"name":"open override var line: Int","description":"domain.ast.FunctionCall.line","location":"-compiler-framework-v2/domain.ast/-function-call/line.html","searchKeys":["line","open override var line: Int","domain.ast.FunctionCall.line"]},{"name":"open override var line: Int","description":"domain.ast.Group.line","location":"-compiler-framework-v2/domain.ast/-group/line.html","searchKeys":["line","open override var line: Int","domain.ast.Group.line"]},{"name":"open override var line: Int","description":"domain.ast.Identifier.line","location":"-compiler-framework-v2/domain.ast/-identifier/line.html","searchKeys":["line","open override var line: Int","domain.ast.Identifier.line"]},{"name":"open override var line: Int","description":"domain.ast.IfClause.line","location":"-compiler-framework-v2/domain.ast/-if-clause/line.html","searchKeys":["line","open override var line: Int","domain.ast.IfClause.line"]},{"name":"open override var line: Int","description":"domain.ast.Iteration.line","location":"-compiler-framework-v2/domain.ast/-iteration/line.html","searchKeys":["line","open override var line: Int","domain.ast.Iteration.line"]},{"name":"open override var line: Int","description":"domain.ast.Loop.line","location":"-compiler-framework-v2/domain.ast/-loop/line.html","searchKeys":["line","open override var line: Int","domain.ast.Loop.line"]},{"name":"open override var line: Int","description":"domain.ast.Module.line","location":"-compiler-framework-v2/domain.ast/-module/line.html","searchKeys":["line","open override var line: Int","domain.ast.Module.line"]},{"name":"open override var line: Int","description":"domain.ast.Property.line","location":"-compiler-framework-v2/domain.ast/-property/line.html","searchKeys":["line","open override var line: Int","domain.ast.Property.line"]},{"name":"open override var line: Int","description":"domain.ast.Return.line","location":"-compiler-framework-v2/domain.ast/-return/line.html","searchKeys":["line","open override var line: Int","domain.ast.Return.line"]},{"name":"open override var line: Int","description":"domain.ast.StructElement.line","location":"-compiler-framework-v2/domain.ast/-struct-element/line.html","searchKeys":["line","open override var line: Int","domain.ast.StructElement.line"]},{"name":"open override var line: Int","description":"domain.ast.Typecast.line","location":"-compiler-framework-v2/domain.ast/-typecast/line.html","searchKeys":["line","open override var line: Int","domain.ast.Typecast.line"]},{"name":"open override var line: Int","description":"domain.ast.UnaryExpression.line","location":"-compiler-framework-v2/domain.ast/-unary-expression/line.html","searchKeys":["line","open override var line: Int","domain.ast.UnaryExpression.line"]},{"name":"open override var line: Int","description":"domain.ast.Value.line","location":"-compiler-framework-v2/domain.ast/-value/line.html","searchKeys":["line","open override var line: Int","domain.ast.Value.line"]},{"name":"open override var line: Int","description":"domain.ast.VariableDefinition.line","location":"-compiler-framework-v2/domain.ast/-variable-definition/line.html","searchKeys":["line","open override var line: Int","domain.ast.VariableDefinition.line"]},{"name":"open override var line: Int","description":"domain.ast.errors.Error.line","location":"-compiler-framework-v2/domain.ast.errors/-error/line.html","searchKeys":["line","open override var line: Int","domain.ast.errors.Error.line"]},{"name":"open override var line: Int","description":"domain.ast.errors.SemanticError.line","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/line.html","searchKeys":["line","open override var line: Int","domain.ast.errors.SemanticError.line"]},{"name":"open override var parent: IsParent?","description":"domain.ast.ArrayElement.parent","location":"-compiler-framework-v2/domain.ast/-array-element/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.ArrayElement.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.Assignment.parent","location":"-compiler-framework-v2/domain.ast/-assignment/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.Assignment.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.BinaryExpression.parent","location":"-compiler-framework-v2/domain.ast/-binary-expression/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.BinaryExpression.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.Block.parent","location":"-compiler-framework-v2/domain.ast/-block/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.Block.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.Definition.parent","location":"-compiler-framework-v2/domain.ast/-definition/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.Definition.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.ForLoop.parent","location":"-compiler-framework-v2/domain.ast/-for-loop/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.ForLoop.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.FunctionCall.parent","location":"-compiler-framework-v2/domain.ast/-function-call/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.FunctionCall.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.Group.parent","location":"-compiler-framework-v2/domain.ast/-group/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.Group.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.Identifier.parent","location":"-compiler-framework-v2/domain.ast/-identifier/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.Identifier.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.IfClause.parent","location":"-compiler-framework-v2/domain.ast/-if-clause/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.IfClause.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.Iteration.parent","location":"-compiler-framework-v2/domain.ast/-iteration/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.Iteration.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.Loop.parent","location":"-compiler-framework-v2/domain.ast/-loop/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.Loop.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.Module.parent","location":"-compiler-framework-v2/domain.ast/-module/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.Module.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.Property.parent","location":"-compiler-framework-v2/domain.ast/-property/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.Property.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.Return.parent","location":"-compiler-framework-v2/domain.ast/-return/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.Return.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.StructElement.parent","location":"-compiler-framework-v2/domain.ast/-struct-element/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.StructElement.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.Typecast.parent","location":"-compiler-framework-v2/domain.ast/-typecast/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.Typecast.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.UnaryExpression.parent","location":"-compiler-framework-v2/domain.ast/-unary-expression/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.UnaryExpression.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.Value.parent","location":"-compiler-framework-v2/domain.ast/-value/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.Value.parent"]},{"name":"open override var parent: IsParent?","description":"domain.ast.VariableDefinition.parent","location":"-compiler-framework-v2/domain.ast/-variable-definition/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.ast.VariableDefinition.parent"]},{"name":"open override var parent: IsParent?","description":"domain.types.Array.parent","location":"-compiler-framework-v2/domain.types/-array/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.types.Array.parent"]},{"name":"open override var parent: IsParent?","description":"domain.types.Function.parent","location":"-compiler-framework-v2/domain.types/-function/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.types.Function.parent"]},{"name":"open override var parent: IsParent?","description":"domain.types.Struct.parent","location":"-compiler-framework-v2/domain.types/-struct/parent.html","searchKeys":["parent","open override var parent: IsParent?","domain.types.Struct.parent"]},{"name":"open override var typeName: String?","description":"domain.ast.ArrayElement.typeName","location":"-compiler-framework-v2/domain.ast/-array-element/type-name.html","searchKeys":["typeName","open override var typeName: String?","domain.ast.ArrayElement.typeName"]},{"name":"open override var typeName: String?","description":"domain.ast.BinaryExpression.typeName","location":"-compiler-framework-v2/domain.ast/-binary-expression/type-name.html","searchKeys":["typeName","open override var typeName: String?","domain.ast.BinaryExpression.typeName"]},{"name":"open override var typeName: String?","description":"domain.ast.FunctionCall.typeName","location":"-compiler-framework-v2/domain.ast/-function-call/type-name.html","searchKeys":["typeName","open override var typeName: String?","domain.ast.FunctionCall.typeName"]},{"name":"open override var typeName: String?","description":"domain.ast.Identifier.typeName","location":"-compiler-framework-v2/domain.ast/-identifier/type-name.html","searchKeys":["typeName","open override var typeName: String?","domain.ast.Identifier.typeName"]},{"name":"open override var typeName: String?","description":"domain.ast.Property.typeName","location":"-compiler-framework-v2/domain.ast/-property/type-name.html","searchKeys":["typeName","open override var typeName: String?","domain.ast.Property.typeName"]},{"name":"open override var typeName: String?","description":"domain.ast.Return.typeName","location":"-compiler-framework-v2/domain.ast/-return/type-name.html","searchKeys":["typeName","open override var typeName: String?","domain.ast.Return.typeName"]},{"name":"open override var typeName: String?","description":"domain.ast.StructElement.typeName","location":"-compiler-framework-v2/domain.ast/-struct-element/type-name.html","searchKeys":["typeName","open override var typeName: String?","domain.ast.StructElement.typeName"]},{"name":"open override var typeName: String?","description":"domain.ast.Typecast.typeName","location":"-compiler-framework-v2/domain.ast/-typecast/type-name.html","searchKeys":["typeName","open override var typeName: String?","domain.ast.Typecast.typeName"]},{"name":"open override var typeName: String?","description":"domain.ast.UnaryExpression.typeName","location":"-compiler-framework-v2/domain.ast/-unary-expression/type-name.html","searchKeys":["typeName","open override var typeName: String?","domain.ast.UnaryExpression.typeName"]},{"name":"open override var typeName: String?","description":"domain.ast.Value.typeName","location":"-compiler-framework-v2/domain.ast/-value/type-name.html","searchKeys":["typeName","open override var typeName: String?","domain.ast.Value.typeName"]},{"name":"sealed class CompileResult","description":"compiler.CompileResult","location":"-compiler-framework-v2/compiler/-compile-result/index.html","searchKeys":["CompileResult","sealed class CompileResult","compiler.CompileResult"]},{"name":"val analyzer: Analyzer?","description":"compiler.Compiler.analyzer","location":"-compiler-framework-v2/compiler/-compiler/analyzer.html","searchKeys":["analyzer","val analyzer: Analyzer?","compiler.Compiler.analyzer"]},{"name":"val compiledCode: String","description":"compiler.CompileSuccess.compiledCode","location":"-compiler-framework-v2/compiler/-compile-success/compiled-code.html","searchKeys":["compiledCode","val compiledCode: String","compiler.CompileSuccess.compiledCode"]},{"name":"val errors: List<CompilationError>","description":"compiler.CompileFailure.errors","location":"-compiler-framework-v2/compiler/-compile-failure/errors.html","searchKeys":["errors","val errors: List<CompilationError>","compiler.CompileFailure.errors"]},{"name":"val errors: MutableList<CompilationError>","description":"compiler.Compiler.Companion.errors","location":"-compiler-framework-v2/compiler/-compiler/-companion/errors.html","searchKeys":["errors","val errors: MutableList<CompilationError>","compiler.Compiler.Companion.errors"]},{"name":"val parameters: MutableList<Property>","description":"domain.types.Function.parameters","location":"-compiler-framework-v2/domain.types/-function/parameters.html","searchKeys":["parameters","val parameters: MutableList<Property>","domain.types.Function.parameters"]},{"name":"val parserWrapper: ParserWrapper","description":"compiler.Compiler.parserWrapper","location":"-compiler-framework-v2/compiler/-compiler/parser-wrapper.html","searchKeys":["parserWrapper","val parserWrapper: ParserWrapper","compiler.Compiler.parserWrapper"]},{"name":"val returnTypeName: String","description":"domain.types.Function.returnTypeName","location":"-compiler-framework-v2/domain.types/-function/return-type-name.html","searchKeys":["returnTypeName","val returnTypeName: String","domain.types.Function.returnTypeName"]},{"name":"val statements: MutableList<AstObject>","description":"domain.ast.Block.statements","location":"-compiler-framework-v2/domain.ast/-block/statements.html","searchKeys":["statements","val statements: MutableList<AstObject>","domain.ast.Block.statements"]},{"name":"val visitor: ParseTreeVisitor<AstObject>","description":"compiler.Compiler.visitor","location":"-compiler-framework-v2/compiler/-compiler/visitor.html","searchKeys":["visitor","val visitor: ParseTreeVisitor<AstObject>","compiler.Compiler.visitor"]},{"name":"var array: Expression","description":"domain.ast.ArrayElement.array","location":"-compiler-framework-v2/domain.ast/-array-element/array.html","searchKeys":["array","var array: Expression","domain.ast.ArrayElement.array"]},{"name":"var block: Block","description":"domain.ast.Module.block","location":"-compiler-framework-v2/domain.ast/-module/block.html","searchKeys":["block","var block: Block","domain.ast.Module.block"]},{"name":"var charPosition: Int","description":"domain.ast.errors.Error.charPosition","location":"-compiler-framework-v2/domain.ast.errors/-error/char-position.html","searchKeys":["charPosition","var charPosition: Int","domain.ast.errors.Error.charPosition"]},{"name":"var condition: Expression","description":"domain.ast.IfClause.condition","location":"-compiler-framework-v2/domain.ast/-if-clause/condition.html","searchKeys":["condition","var condition: Expression","domain.ast.IfClause.condition"]},{"name":"var condition: Expression","description":"domain.ast.Loop.condition","location":"-compiler-framework-v2/domain.ast/-loop/condition.html","searchKeys":["condition","var condition: Expression","domain.ast.Loop.condition"]},{"name":"var declarations: MutableList<AstObject>","description":"domain.ast.Group.declarations","location":"-compiler-framework-v2/domain.ast/-group/declarations.html","searchKeys":["declarations","var declarations: MutableList<AstObject>","domain.ast.Group.declarations"]},{"name":"var defaultValue: Expression?","description":"domain.ast.Property.defaultValue","location":"-compiler-framework-v2/domain.ast/-property/default-value.html","searchKeys":["defaultValue","var defaultValue: Expression?","domain.ast.Property.defaultValue"]},{"name":"var definedType: Type","description":"domain.ast.Definition.definedType","location":"-compiler-framework-v2/domain.ast/-definition/defined-type.html","searchKeys":["definedType","var definedType: Type","domain.ast.Definition.definedType"]},{"name":"var els: Block?","description":"domain.ast.IfClause.els","location":"-compiler-framework-v2/domain.ast/-if-clause/els.html","searchKeys":["els","var els: Block?","domain.ast.IfClause.els"]},{"name":"var evaluation: Loop.Evaluation","description":"domain.ast.Loop.evaluation","location":"-compiler-framework-v2/domain.ast/-loop/evaluation.html","searchKeys":["evaluation","var evaluation: Loop.Evaluation","domain.ast.Loop.evaluation"]},{"name":"var expression: Expression","description":"domain.ast.UnaryExpression.expression","location":"-compiler-framework-v2/domain.ast/-unary-expression/expression.html","searchKeys":["expression","var expression: Expression","domain.ast.UnaryExpression.expression"]},{"name":"var expression: Expression?","description":"domain.ast.Return.expression","location":"-compiler-framework-v2/domain.ast/-return/expression.html","searchKeys":["expression","var expression: Expression?","domain.ast.Return.expression"]},{"name":"var fType: Float.FType","description":"domain.types.Float.fType","location":"-compiler-framework-v2/domain.types/-float/f-type.html","searchKeys":["fType","var fType: Float.FType","domain.types.Float.fType"]},{"name":"var field: String","description":"domain.ast.StructElement.field","location":"-compiler-framework-v2/domain.ast/-struct-element/field.html","searchKeys":["field","var field: String","domain.ast.StructElement.field"]},{"name":"var from: Expression","description":"domain.ast.Assignment.from","location":"-compiler-framework-v2/domain.ast/-assignment/from.html","searchKeys":["from","var from: Expression","domain.ast.Assignment.from"]},{"name":"var from: Expression","description":"domain.ast.Typecast.from","location":"-compiler-framework-v2/domain.ast/-typecast/from.html","searchKeys":["from","var from: Expression","domain.ast.Typecast.from"]},{"name":"var function: Expression","description":"domain.ast.FunctionCall.function","location":"-compiler-framework-v2/domain.ast/-function-call/function.html","searchKeys":["function","var function: Expression","domain.ast.FunctionCall.function"]},{"name":"var functions: HashMap<String, Function>","description":"domain.SymbolTable.functions","location":"-compiler-framework-v2/domain/-symbol-table/functions.html","searchKeys":["functions","var functions: HashMap<String, Function>","domain.SymbolTable.functions"]},{"name":"var iType: Integer.IType","description":"domain.types.Integer.iType","location":"-compiler-framework-v2/domain.types/-integer/i-type.html","searchKeys":["iType","var iType: Integer.IType","domain.types.Integer.iType"]},{"name":"var id: String","description":"domain.ast.errors.Error.id","location":"-compiler-framework-v2/domain.ast.errors/-error/id.html","searchKeys":["id","var id: String","domain.ast.errors.Error.id"]},{"name":"var index: Expression","description":"domain.ast.ArrayElement.index","location":"-compiler-framework-v2/domain.ast/-array-element/--index--.html","searchKeys":["index","var index: Expression","domain.ast.ArrayElement.index"]},{"name":"var init: AstObject","description":"domain.ast.ForLoop.init","location":"-compiler-framework-v2/domain.ast/-for-loop/init.html","searchKeys":["init","var init: AstObject","domain.ast.ForLoop.init"]},{"name":"var init: Expression?","description":"domain.ast.VariableDefinition.init","location":"-compiler-framework-v2/domain.ast/-variable-definition/init.html","searchKeys":["init","var init: Expression?","domain.ast.VariableDefinition.init"]},{"name":"var iterator: Identifier","description":"domain.ast.Iteration.iterator","location":"-compiler-framework-v2/domain.ast/-iteration/iterator.html","searchKeys":["iterator","var iterator: Identifier","domain.ast.Iteration.iterator"]},{"name":"var left: Expression","description":"domain.ast.BinaryExpression.left","location":"-compiler-framework-v2/domain.ast/-binary-expression/left.html","searchKeys":["left","var left: Expression","domain.ast.BinaryExpression.left"]},{"name":"var length: Expression","description":"domain.types.Array.length","location":"-compiler-framework-v2/domain.types/-array/length.html","searchKeys":["length","var length: Expression","domain.types.Array.length"]},{"name":"var lexer: Lexer","description":"compiler.Compiler.lexer","location":"-compiler-framework-v2/compiler/-compiler/lexer.html","searchKeys":["lexer","var lexer: Lexer","compiler.Compiler.lexer"]},{"name":"var loop: Loop","description":"domain.ast.ForLoop.loop","location":"-compiler-framework-v2/domain.ast/-for-loop/loop.html","searchKeys":["loop","var loop: Loop","domain.ast.ForLoop.loop"]},{"name":"var msg: String","description":"domain.ast.errors.Error.msg","location":"-compiler-framework-v2/domain.ast.errors/-error/msg.html","searchKeys":["msg","var msg: String","domain.ast.errors.Error.msg"]},{"name":"var op: BinaryExpression.BinaryOperator","description":"domain.ast.BinaryExpression.op","location":"-compiler-framework-v2/domain.ast/-binary-expression/op.html","searchKeys":["op","var op: BinaryExpression.BinaryOperator","domain.ast.BinaryExpression.op"]},{"name":"var op: UnaryExpression.UnaryOperator","description":"domain.ast.UnaryExpression.op","location":"-compiler-framework-v2/domain.ast/-unary-expression/op.html","searchKeys":["op","var op: UnaryExpression.UnaryOperator","domain.ast.UnaryExpression.op"]},{"name":"var parameters: MutableList<Expression>","description":"domain.ast.FunctionCall.parameters","location":"-compiler-framework-v2/domain.ast/-function-call/parameters.html","searchKeys":["parameters","var parameters: MutableList<Expression>","domain.ast.FunctionCall.parameters"]},{"name":"var properties: MutableList<Property>","description":"domain.types.Struct.properties","location":"-compiler-framework-v2/domain.types/-struct/properties.html","searchKeys":["properties","var properties: MutableList<Property>","domain.types.Struct.properties"]},{"name":"var right: Expression","description":"domain.ast.BinaryExpression.right","location":"-compiler-framework-v2/domain.ast/-binary-expression/right.html","searchKeys":["right","var right: Expression","domain.ast.BinaryExpression.right"]},{"name":"var statement: Block","description":"domain.ast.Iteration.statement","location":"-compiler-framework-v2/domain.ast/-iteration/statement.html","searchKeys":["statement","var statement: Block","domain.ast.Iteration.statement"]},{"name":"var statement: Block","description":"domain.ast.Loop.statement","location":"-compiler-framework-v2/domain.ast/-loop/statement.html","searchKeys":["statement","var statement: Block","domain.ast.Loop.statement"]},{"name":"var statements: Block?","description":"domain.types.Function.statements","location":"-compiler-framework-v2/domain.types/-function/statements.html","searchKeys":["statements","var statements: Block?","domain.types.Function.statements"]},{"name":"var steps: Assignment","description":"domain.ast.ForLoop.steps","location":"-compiler-framework-v2/domain.ast/-for-loop/steps.html","searchKeys":["steps","var steps: Assignment","domain.ast.ForLoop.steps"]},{"name":"var struct: Expression","description":"domain.ast.StructElement.struct","location":"-compiler-framework-v2/domain.ast/-struct-element/struct.html","searchKeys":["struct","var struct: Expression","domain.ast.StructElement.struct"]},{"name":"var then: Block","description":"domain.ast.IfClause.then","location":"-compiler-framework-v2/domain.ast/-if-clause/then.html","searchKeys":["then","var then: Block","domain.ast.IfClause.then"]},{"name":"var title: String","description":"domain.ast.Identifier.title","location":"-compiler-framework-v2/domain.ast/-identifier/title.html","searchKeys":["title","var title: String","domain.ast.Identifier.title"]},{"name":"var title: String","description":"domain.ast.Property.title","location":"-compiler-framework-v2/domain.ast/-property/title.html","searchKeys":["title","var title: String","domain.ast.Property.title"]},{"name":"var to: Assignable","description":"domain.ast.Assignment.to","location":"-compiler-framework-v2/domain.ast/-assignment/to.html","searchKeys":["to","var to: Assignable","domain.ast.Assignment.to"]},{"name":"var type: SemanticError.Type","description":"domain.ast.errors.SemanticError.type","location":"-compiler-framework-v2/domain.ast.errors/-semantic-error/type.html","searchKeys":["type","var type: SemanticError.Type","domain.ast.errors.SemanticError.type"]},{"name":"var typeName: String","description":"domain.types.Array.typeName","location":"-compiler-framework-v2/domain.types/-array/type-name.html","searchKeys":["typeName","var typeName: String","domain.types.Array.typeName"]},{"name":"var types: HashMap<String, Type>","description":"domain.SymbolTable.types","location":"-compiler-framework-v2/domain/-symbol-table/types.html","searchKeys":["types","var types: HashMap<String, Type>","domain.SymbolTable.types"]},{"name":"var value: String","description":"domain.ast.Value.value","location":"-compiler-framework-v2/domain.ast/-value/value.html","searchKeys":["value","var value: String","domain.ast.Value.value"]},{"name":"var variable: Identifier","description":"domain.ast.VariableDefinition.variable","location":"-compiler-framework-v2/domain.ast/-variable-definition/variable.html","searchKeys":["variable","var variable: Identifier","domain.ast.VariableDefinition.variable"]},{"name":"var variable: String","description":"domain.ast.Iteration.variable","location":"-compiler-framework-v2/domain.ast/-iteration/variable.html","searchKeys":["variable","var variable: String","domain.ast.Iteration.variable"]},{"name":"var variables: HashMap<String, String?>","description":"domain.SymbolTable.variables","location":"-compiler-framework-v2/domain/-symbol-table/variables.html","searchKeys":["variables","var variables: HashMap<String, String?>","domain.SymbolTable.variables"]}]
