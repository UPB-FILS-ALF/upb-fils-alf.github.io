"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[856],{6748:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>d});var i=s(7624),t=s(2172);const l={sidebar_position:3,description:"Analyse de l'AST"},r="03 - Analyse s\xe9mantique",a={id:"devoir/03",title:"03 - Analyse s\xe9mantique",description:"Analyse de l'AST",source:"@site/docs/devoir/03.md",sourceDirName:"devoir",slug:"/devoir/03",permalink:"/docs/devoir/03",draft:!1,unlisted:!1,editUrl:"https://github.com/UPB-FILS-alf/upb-fils-alf.github.io/edit/main/docs/devoir/03.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Analyse de l'AST"},sidebar:"tutorialSidebar",previous:{title:"02 - Analyse syntaxique",permalink:"/docs/devoir/02"},next:{title:"G\xe9n\xe9ration de code",permalink:"/docs/devoir/04"}},o={},d=[{value:"Informations",id:"informations",level:2},{value:"Demandes",id:"demandes",level:2},{value:"Le tableau de symboles",id:"le-tableau-de-symboles",level:3},{value:"Erreurs semantiques",id:"erreurs-semantiques",level:3},{value:"S\xe9rialisation et d\xe9s\xe9rialisation",id:"s\xe9rialisation-et-d\xe9s\xe9rialisation",level:2},{value:"Situations d\u2019analyse possibles",id:"situations-danalyse-possibles",level:2},{value:"Les types",id:"les-types",level:3},{value:"Les d\xe9finitions",id:"les-d\xe9finitions",level:3},{value:"Les expressions",id:"les-expressions",level:3},{value:"Les affectations",id:"les-affectations",level:3},{value:"Conseils",id:"conseils",level:2},{value:"Bonus (0.5p)",id:"bonus-05p",level:2},{value:"Questions",id:"questions",level:2}];function c(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"03---analyse-s\xe9mantique",children:"03 - Analyse s\xe9mantique"}),"\n",(0,i.jsx)(n.h2,{id:"informations",children:"Informations"}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Deadline: le 15 mai, 23:59 ",(0,i.jsx)(n.br,{}),"\n","Points: 2 points de la note finale ",(0,i.jsx)(n.br,{}),"\n","Lien: ",(0,i.jsx)(n.a,{href:"https://classroom.github.com/a/MT-NqADe",children:"https://classroom.github.com/a/MT-NqADe"})," ",(0,i.jsx)(n.br,{}),"\n","T\xe9l\xe9chargement tardif: ",(0,i.jsx)(n.strong,{children:"0.5p/jour"})," (maximum 4 jours)"]})}),"\n",(0,i.jsx)(n.h2,{id:"demandes",children:"Demandes"}),"\n",(0,i.jsx)(n.p,{children:"Analysez du point de vue s\xe9mantique l\u2019AST re\xe7u. Remplissez les tableaux de symboles, v\xe9rifiez les d\xe9clarations et les types des donn\xe9es."}),"\n",(0,i.jsx)(n.p,{children:"Vous allez recevoir l\u2019AST sous la forme d\u2019un JSON lu \xe0 partir d\u2019un fichier re\xe7u de la ligne de commande. Les entr\xe9es sont similaires aux sorties du devoir pr\xe9c\xe9dant. Les r\xe9sultats auront toujours la structure de l\u2019AST mais, cette fois, les tableaux de symboles et les types des expressions seront remplis."}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"Le repository des testes contient aussi le code source \xe0 partir duquel on a obtenu l\u2019AST en utilisant la solution du devoir pr\xe9c\xe9dant. Ne faites pas la confusion entre les deux! Les donn\xe9es d\u2019entr\xe9e pour ce devoir seront les ASTs. On a ajout\xe9 aussi le code source pour rendre la resolution plus facile, mais ce devoir travail exclusivement avec des ASTs."})}),"\n",(0,i.jsx)(n.p,{children:"Le programme source recevra deux param\xe8tres de la ligne de commande: le chemin vers le fichier d'entr\xe9e et le chemin vers le fichier de sortie."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'$ ./gradlew run --args="path/to/input.json path/to/output.json"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Exemple:"}),"\n",(0,i.jsx)(n.p,{children:"Pour le code source suivant:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:"showLineNumbers",children:"/* Variable value Attribution */\n\ndeclare integer n;\n\nn = 6;\n"})}),"\n",(0,i.jsx)(n.p,{children:"L\u2019entr\xe9e sera:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@type" : "Module",\n  "block" : {\n    "@type" : "Block",\n    "statements" : [ {\n      "@type" : "Group",\n      "declarations" : [ {\n        "@type" : "VariableDefinition",\n        "variable" : {\n          "@type" : "Identifier",\n          "title" : "n",\n          "typeName" : "I64",\n          "line" : 3\n        },\n        "init" : null,\n        "line" : 3\n      } ],\n      "line" : 3\n    }, {\n      "@type" : "Assignment",\n      "to" : {\n        "@type" : "Identifier",\n        "title" : "n",\n        "typeName" : null,\n        "line" : 5\n      },\n      "from" : {\n        "@type" : "Value",\n        "value" : "6",\n        "typeName" : "I64",\n        "line" : 5\n      },\n      "line" : 5\n    } ],\n    "line" : 3,\n    "scope" : {\n      "@type" : "SymbolTable",\n      "variables" : { },\n      "types" : { },\n      "functions" : { }\n    }\n  },\n  "line" : 3\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Et la sortie que vous devez obtenir apr\xe8s l\u2019analyse est:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@type" : "Module",\n  "block" : {\n    "@type" : "Block",\n    "statements" : [ {\n      "@type" : "Assignment",\n      "to" : {\n        "@type" : "Identifier",\n        "title" : "n",\n        "typeName" : "I64",\n        "line" : 5\n      },\n      "from" : {\n        "@type" : "Value",\n        "value" : "6",\n        "typeName" : "I64",\n        "line" : 5\n      },\n      "line" : 5\n    } ],\n    "line" : 3,\n    "scope" : {\n      "@type" : "SymbolTable",\n      "variables" : {\n        "n" : "I64"\n      },\n      "types" : {\n        "I64" : {\n          "@type" : "Integer",\n          "itype" : "I64",\n          "title" : "I64"\n        }\n      },\n      "functions" : { }\n    }\n  },\n  "line" : 3\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"le-tableau-de-symboles",children:"Le tableau de symboles"}),"\n",(0,i.jsx)(n.p,{children:"Pour une port\xe9e de visibilit\xe9 (scope), le tableau de symboles gardera les types, les variables et les fonctions d\xe9finis. Les tableaux de symboles contiennent les champs suivants:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"variables : HashMap<String, String?>"})," : la cl\xe9 est le nom d\u2019une variable. La valeur est le nom de son type. Les valeurs co\xefncident avec les cl\xe9s du ",(0,i.jsx)(n.code,{children:"types"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"types : HashMap<String, Type>"})," : la cl\xe9 est le nom du type (qui se retrouve, pour les expressions, dans le champ ",(0,i.jsx)(n.code,{children:"typeName"}),"), et la valeur et le type corr\xe9spondant."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"functions : HashMap<String, Function>"})," : la cl\xe9 est le nom de la fonction, la valeur est son contenu (obtenu apr\xe8s la d\xe9finiton)."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"erreurs-semantiques",children:"Erreurs semantiques"}),"\n",(0,i.jsx)(n.p,{children:"Les erreurs s\xe9mantiques seront repr\xe9sent\xe9es en utilisant des instances de la classe Semantic Error. Si notre programme contient des erreurs s\xe9mantiques, le r\xe9sultat ne sera plus l\u2019AST, mais une liste contenant les erreurs."}),"\n",(0,i.jsx)(n.p,{children:"Exemple:"}),"\n",(0,i.jsx)(n.p,{children:"Pour le code source suivant:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:"showLineNumbers",children:"/* Attribution error */\n\ndeclare integer a;\ndeclare string s;\n\na = s;\n"})}),"\n",(0,i.jsx)(n.p,{children:"L\u2019entr\xe9e (l\u2019AST) sera:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@type" : "Module",\n  "block" : {\n    "@type" : "Block",\n    "statements" : [ {\n      "@type" : "Group",\n      "declarations" : [ {\n        "@type" : "VariableDefinition",\n        "variable" : {\n          "@type" : "Identifier",\n          "title" : "a",\n          "typeName" : "I64",\n          "line" : 3\n        },\n        "init" : null,\n        "line" : 3\n      } ],\n      "line" : 3\n    }, {\n      "@type" : "Group",\n      "declarations" : [ {\n        "@type" : "VariableDefinition",\n        "variable" : {\n          "@type" : "Identifier",\n          "title" : "s",\n          "typeName" : "String",\n          "line" : 4\n        },\n        "init" : null,\n        "line" : 4\n      } ],\n      "line" : 4\n    }, {\n      "@type" : "Assignment",\n      "to" : {\n        "@type" : "Identifier",\n        "title" : "a",\n        "typeName" : null,\n        "line" : 6\n      },\n      "from" : {\n        "@type" : "Identifier",\n        "title" : "s",\n        "typeName" : null,\n        "line" : 6\n      },\n      "line" : 6\n    } ],\n    "line" : 3,\n    "scope" : {\n      "@type" : "SymbolTable",\n      "variables" : { },\n      "types" : { },\n      "functions" : { }\n    }\n  },\n  "line" : 3\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"Et la sortie sera:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[ {\n  "type" : "TYPE_MISMATCH",\n  "line" : 6\n} ]\n'})}),"\n",(0,i.jsx)(n.h2,{id:"s\xe9rialisation-et-d\xe9s\xe9rialisation",children:"S\xe9rialisation et d\xe9s\xe9rialisation"}),"\n",(0,i.jsx)(n.p,{children:"Pour ce devoir, vous auriez besoin d\u2019un moyen pour transformer les JSONs lus du fichier en instances des classes de la biblioth\xe8que et aussi l\u2019invrse. Ce processus s\u2019appelle s\xe9rialisation (et l\u2019inverse d\xe9s\xe9rialization). On a vu une partie de cela aussi dans le devoir pr\xe9c\xe9dent."}),"\n",(0,i.jsx)(n.p,{children:"Pour transformer le JSON lu dans un objet, on utilise le code suivant:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'val deserializer = ObjectMapper().registerKotlinModule()\nval json : String = readFromFile("chemin/vers/l\'entree")\nval program: AstObject = deserializer.readValue<AstObject>(json)\n'})}),"\n",(0,i.jsx)(n.p,{children:"Pour obtenir le JSON \xe0 partir d\u2019un objet, on utilise le code suivant:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",children:'val analysedProgram : AstObject = ... //le resultat de l\'analyse\n\nval serializer = ObjectMapper().writerWithDefaultPrettyPrinter() \nwriteToFile("chemin/vers/la/sortie", serializer.writeValueAsString(analysedProgram))\n'})}),"\n",(0,i.jsx)(n.p,{children:"On vous a ajout\xe9 dans le starter la d\xe9claration des objets pour la s\xe9rialisation et la d\xe9s\xe9rialisation, vous ne devez que les utiliser."}),"\n",(0,i.jsx)(n.h2,{id:"situations-danalyse-possibles",children:"Situations d\u2019analyse possibles"}),"\n",(0,i.jsx)(n.h3,{id:"les-types",children:"Les types"}),"\n",(0,i.jsxs)(n.p,{children:["V\xe9rifiez, chaque fois que vous rencontrez une expression, une valeur ou une variable, si son type existe. Sinon, traitez les deux cas: soit le type est l\u2019un des types primitives (c\u2019est-\xe0-dire ",(0,i.jsx)(n.code,{children:"integer"}),", ",(0,i.jsx)(n.code,{children:"float"}),", ",(0,i.jsx)(n.code,{children:"string"}),", ",(0,i.jsx)(n.code,{children:"symbol"})," et ",(0,i.jsx)(n.code,{children:"float"}),"), le cas o\xf9 vous pouvez les ajouter directement au plus proche tableau de symboles. S\u2019il s\u2019agit d\u2019un type d\xe9fini par le programmeur, assurez-vous qu\u2019il a \xe9t\xe9 vraiment d\xe9fini avant l\u2019utilisation."]}),"\n",(0,i.jsxs)(n.admonition,{type:"warning",children:[(0,i.jsxs)(n.p,{children:["On a fait un changement dans la biblioth\xe8que d\xe8s le devoir pr\xe9c\xe9dent: pour les types primitives ",(0,i.jsx)(n.code,{children:"integer"})," et ",(0,i.jsx)(n.code,{children:"float"}),", on a chang\xe9 le nom du type (donc l\u2019attribut ",(0,i.jsx)(n.code,{children:"typeName"}),") avec ",(0,i.jsx)(n.code,{children:"I64"}),", respectivement ",(0,i.jsx)(n.code,{children:"F64"}),". Donc, une entr\xe9e dans le tableaux de symboles pour le type de nombre entier aura la forme:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'...\n"types" : {\n        "I64" : {\n          "@type" : "Integer",\n          "itype" : "I64",\n          "title" : "I64"\n        },\n        ...\n      }\n...\n'})})]}),"\n",(0,i.jsx)(n.h3,{id:"les-d\xe9finitions",children:"Les d\xe9finitions"}),"\n",(0,i.jsx)(n.p,{children:"Les d\xe9finitions des variables, des fonctions et des nouveaux types n\u2019appara\xeetront pas dans l\u2019AST apr\xe8s l\u2019analyse. Les objets d\xe9finis seront mis dans les tableaux de symboles associ\xe9s."}),"\n",(0,i.jsx)(n.p,{children:"Pour chaque objet d\xe9fini, v\xe9rifiez qu\u2019il ne soit pas d\xe9j\xe0 d\xe9fini avant."}),"\n",(0,i.jsx)(n.p,{children:"Pour les d\xe9finitions des classes, v\xe9rifiez que le type de chaque champ existe et qu\u2019un champ ne soit pas d\xe9fini deux fois."}),"\n",(0,i.jsxs)(n.p,{children:["Pour les d\xe9finitions des fonctions, v\xe9rifiez le type de chaque param\xe8tre, aussi que l\u2019existence de l\u2019instruction ",(0,i.jsx)(n.code,{children:"return"})," et le type de l\u2019expression renvoy\xe9e."]}),"\n",(0,i.jsx)(n.p,{children:"Pour les d\xe9finitions des listes, v\xe9rifiez le type des donn\xe9es et que les indices soient des nombres enti\xe8res."}),"\n",(0,i.jsx)(n.h3,{id:"les-expressions",children:"Les expressions"}),"\n",(0,i.jsx)(n.p,{children:"Obtenez le type r\xe9sultant du chaque expression. Evaluez ses membres et obtenez leur type. Pour la compatibilit\xe9 des expressions, on a les r\xe8gles suivantes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"les op\xe9rateurs logiques donnent toujours des r\xe9sultats logiques, n\u2019importe lequels soient leurs op\xe9randes"}),"\n",(0,i.jsxs)(n.li,{children:["une expression binaire cont\xe9nant une expression ayant un type num\xe9rique (soit ",(0,i.jsx)(n.code,{children:"I64"})," soit ",(0,i.jsx)(n.code,{children:"F64"}),") et une autre expression ayant un type avec des caract\xe8res (soit ",(0,i.jsx)(n.code,{children:"String"})," soit ",(0,i.jsx)(n.code,{children:"Symbol"}),") et un op\xe9rateur math\xe9matique aura comme type r\xe9sultant le type ",(0,i.jsx)(n.code,{children:"String"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["une expression binaire contenant une expression ayant le type ",(0,i.jsx)(n.code,{children:"I64"}),", le type ",(0,i.jsx)(n.code,{children:"F64"})," et un op\xe9rateur math\xe9matique aura un r\xe9sultat de type ",(0,i.jsx)(n.code,{children:"F64"})]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Pour marquer la conversion d\u2019une expression d\u2019un type vers l\u2019autre (par exemple, de ",(0,i.jsx)(n.code,{children:"I64"})," vers ",(0,i.jsx)(n.code,{children:"String"}),"), on utilise la classe ",(0,i.jsx)(n.code,{children:"Typecast"}),". Le seul cas o\xf9 on ne l\u2019utilise pas, c\u2019est quand on veut faire la conversion de ",(0,i.jsx)(n.code,{children:"I64"})," vers ",(0,i.jsx)(n.code,{children:"F64"}),"."]})}),"\n",(0,i.jsx)(n.p,{children:"Faites les analyses corr\xe9spondantes pour chaque type d\u2019expression:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["pour les expressions binaires, v\xe9rifiez la compatibilit\xe9 des op\xe9randes et remplissez le champ ",(0,i.jsx)(n.code,{children:"typeName"})," de l'instance avec le nom du type r\xe9sultant"]}),"\n",(0,i.jsx)(n.li,{children:"pour les appels des fonctions, v\xe9rifiez le type et le nombre de param\xe8tres et remplissez, dans l\u2019AST, l\u2019instance avec le nom du type de retour"}),"\n",(0,i.jsx)(n.li,{children:"pour les acc\xe9s dans les listes, v\xe9rifiez le type des donn\xe9es dans la liste et assurez-vous que l\u2019indice soit aussi un nombre entier"}),"\n",(0,i.jsx)(n.li,{children:"pour les acc\xe9s dans les classes, v\xe9rifiez l\u2019existance et le type du champ"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"les-affectations",children:"Les affectations"}),"\n",(0,i.jsxs)(n.p,{children:["V\xe9rifiez, comme toujours, la compatibilit\xe9 des types entre la quantit\xe9 de la droite et celle de la gauche. Faites des transtypages (",(0,i.jsx)(n.code,{children:"typecasts"}),") si n\xe9c\xe9ssaire."]}),"\n",(0,i.jsx)(n.h2,{id:"conseils",children:"Conseils"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Lisez les types possibles d\u2019erreurs dans le ",(0,i.jsx)(n.a,{href:"https://upb-fils-alf.github.io/framework/-compiler-framework-v2/domain.ast.errors/-semantic-error/-type/index.html",children:"repository des testes"})," pour voir exactement les cas que vous devez traiter."]}),"\n",(0,i.jsx)(n.li,{children:"Commencez avec les d\xe9finitions. Remplissez les tableaux des symboles."}),"\n",(0,i.jsx)(n.li,{children:"Continuez avec les expressions. Traitez chaque type d\u2019expression dans la mani\xe8re corr\xe9spondante."}),"\n",(0,i.jsx)(n.li,{children:"Traitez premi\xe8rement les cas sans erreurs et ensuite ajoutez le traitement des erreurs."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"bonus-05p",children:"Bonus (0.5p)"}),"\n",(0,i.jsx)(n.p,{children:"Traitez aussi les cas de d\xe9claration des variables sans pr\xe9ciser explicitement le type. Vous obtiendrez le type \xe0 partir de l\u2019expression qu\u2019on affecte \xe0 la variable.\nLes d\xe9clarations auront la forme suivante:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"/* Type from value */\n\ndeclare v = 90;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Dans ce cas, \xe0 la fin de l\u2019analyse s\xe9mantique, on aura la variable avec le nom ",(0,i.jsx)(n.code,{children:"v"}),", ayant le type de l\u2019expression de la partie droite. Pour le code d\u2019avant, l\u2019AST analys\xe9 aura la forme suivante:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "@type" : "Module",\n  "block" : {\n    "@type" : "Block",\n    "statements" : [ {\n      "@type" : "Assignment",\n      "to" : {\n        "@type" : "Identifier",\n        "title" : "v",\n        "typeName" : "I64",\n        "line" : 3\n      },\n      "from" : {\n        "@type" : "Value",\n        "value" : "90",\n        "typeName" : "I64",\n        "line" : 3\n      },\n      "line" : 3\n    } ],\n    "line" : 3,\n    "scope" : {\n      "@type" : "SymbolTable",\n      "variables" : {\n        "v" : "I64"\n      },\n      "types" : {\n        "I64" : {\n          "@type" : "Integer",\n          "itype" : "I64",\n          "title" : "I64"\n        }\n      },\n      "functions" : { }\n    }\n  },\n  "line" : 3\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"questions",children:"Questions"}),"\n",(0,i.jsxs)(n.p,{children:["Si vous avez des questions concernant les devoirs, posez-les en publiant un probl\xe8me sur le ",(0,i.jsx)(n.a,{href:"https://github.com/UPB-FILS-ALF/questions",children:"github repository pour les questions"})," avec le format du titre ",(0,i.jsx)(n.code,{children:"[semantique]<titre de votre question>"}),". Vous aurez besoin d'un compte github pour cela."]}),"\n",(0,i.jsx)(n.admonition,{title:"Attention",type:"danger",children:(0,i.jsx)(n.p,{children:"Ne postez pas de code. Cette action est consid\xe9r\xe9 comme tentative de tricher et alors vous obtiendrez 0p pour le devoir."})}),"\n",(0,i.jsxs)(n.p,{children:["Si vous souhaitez recevoir un e-mail lorsque des probl\xe8mes sont publi\xe9s ou lorsqu'il y a de nouveaux messages, acc\xe9dez au ",(0,i.jsx)(n.a,{href:"https://github.com/UPB-FILS-ALF/questions",children:"repository pour les questions"})," et cliquez sur Regarder."]})]})}function u(e={}){const{wrapper:n}={...(0,t.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},2172:(e,n,s)=>{s.d(n,{I:()=>a,M:()=>r});var i=s(1504);const t={},l=i.createContext(t);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);